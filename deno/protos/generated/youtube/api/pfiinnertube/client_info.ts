// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.0
// source: youtube/api/pfiinnertube/client_info.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "youtube.api.pfiinnertube";

export interface ClientInfo {
  hl?: string | undefined;
  gl?: string | undefined;
  remoteHost?: string | undefined;
  deviceId?: string | undefined;
  debugDeviceIdOverride?: string | undefined;
  carrierGeo?: string | undefined;
  crackedHl?: boolean | undefined;
  deviceMake?: string | undefined;
  deviceModel?: string | undefined;
  visitorData?: string | undefined;
  userAgent?: string | undefined;
  clientName?: number | undefined;
  clientVersion?: string | undefined;
  osName?: string | undefined;
  osVersion?: string | undefined;
  projectId?: string | undefined;
  acceptLanguage?: string | undefined;
  acceptRegion?: string | undefined;
  originalUrl?: string | undefined;
  rawDeviceId?: string | undefined;
  configData?: string | undefined;
  spacecastToken?: string | undefined;
  internalGeo?: string | undefined;
  screenWidthPoints?: number | undefined;
  screenHeightPoints?: number | undefined;
  screenWidthInches?: number | undefined;
  screenHeightInches?: number | undefined;
  screenPixelDensity?: number | undefined;
  platform?: number | undefined;
  spacecastClientInfo?: ClientInfo_SpacecastClientInfo | undefined;
  clientFormFactor?: ClientInfo_ClientFormFactor | undefined;
  forwardedFor?: string | undefined;
  mobileDataPlanInfo?:
    | ClientInfo_MobileDataPlanInfo
    | undefined;
  /** e.g. 241757026 */
  gmscoreVersionCode?: number | undefined;
  webpSupport?: boolean | undefined;
  cameraType?: ClientInfo_CameraType | undefined;
  experimentsToken?: string | undefined;
  windowWidthPoints?: number | undefined;
  windowHeightPoints?: number | undefined;
  configInfo?: ClientInfo_ConfigGroupsClientInfo | undefined;
  unpluggedLocationInfo?: ClientInfo_UnpluggedLocationInfo | undefined;
  androidSdkVersion?: number | undefined;
  screenDensityFloat?: number | undefined;
  firstTimeSignInExperimentIds?: number | undefined;
  utcOffsetMinutes?: number | undefined;
  animatedWebpSupport?: boolean | undefined;
  kidsAppInfo?: ClientInfo_KidsAppInfo | undefined;
  musicAppInfo?: ClientInfo_MusicAppInfo | undefined;
  tvAppInfo?: ClientInfo_TvAppInfo | undefined;
  internalGeoIp?: string | undefined;
  unpluggedAppInfo?: ClientInfo_UnpluggedAppInfo | undefined;
  locationInfo?: ClientInfo_LocationInfo | undefined;
  contentSizeCategory?: string | undefined;
  fontScale?: number | undefined;
  userInterfaceTheme?: ClientInfo_UserInterfaceTheme | undefined;
  timeZone?: string | undefined;
  homeGroupInfo?: ClientInfo_HomeGroupInfo | undefined;
  emlTemplateContext?: Uint8Array | undefined;
  coldAppBundleConfigData?:
    | Uint8Array
    | undefined;
  /** repeated ExperimentsHeterodyne.ExperimentIds heterodyne_ids = 86; */
  browserName?: string | undefined;
  browserVersion?: string | undefined;
  locationPlayabilityToken?:
    | string
    | undefined;
  /** e.g. "qcom;taro" */
  chipset?: string | undefined;
  firmwareVersion?: string | undefined;
  memoryTotalKbytes?: number | undefined;
  mainAppWebInfo?: ClientInfo_MainAppWebInfo | undefined;
  notificationPermissionInfo?: ClientInfo_NotificationPermissionInfo | undefined;
  deviceBrand?:
    | string
    | undefined;
  /**
   * optional ClientStoreInfo client_store_info = 99;
   * optional SRSDataPushVersion srs_datapush_build_ids = 100;
   * optional PlayerDataPushVersion player_datapush_build_ids = 101;
   */
  glDeviceInfo?: ClientInfo_GLDeviceInfo | undefined;
}

export enum ClientInfo_ClientFormFactor {
  /** UNKNOWN_FORM_FACTOR - @TODO: Check these. */
  UNKNOWN_FORM_FACTOR = 0,
  FORM_FACTOR_VAL1 = 1,
  FORM_FACTOR_VAL2 = 2,
  UNRECOGNIZED = -1,
}

export function clientInfo_ClientFormFactorFromJSON(object: any): ClientInfo_ClientFormFactor {
  switch (object) {
    case 0:
    case "UNKNOWN_FORM_FACTOR":
      return ClientInfo_ClientFormFactor.UNKNOWN_FORM_FACTOR;
    case 1:
    case "FORM_FACTOR_VAL1":
      return ClientInfo_ClientFormFactor.FORM_FACTOR_VAL1;
    case 2:
    case "FORM_FACTOR_VAL2":
      return ClientInfo_ClientFormFactor.FORM_FACTOR_VAL2;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_ClientFormFactor.UNRECOGNIZED;
  }
}

export function clientInfo_ClientFormFactorToJSON(object: ClientInfo_ClientFormFactor): string {
  switch (object) {
    case ClientInfo_ClientFormFactor.UNKNOWN_FORM_FACTOR:
      return "UNKNOWN_FORM_FACTOR";
    case ClientInfo_ClientFormFactor.FORM_FACTOR_VAL1:
      return "FORM_FACTOR_VAL1";
    case ClientInfo_ClientFormFactor.FORM_FACTOR_VAL2:
      return "FORM_FACTOR_VAL2";
    case ClientInfo_ClientFormFactor.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_CameraType {
  UNKNOWN_CAMERA_TYPE = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_CameraTypeFromJSON(object: any): ClientInfo_CameraType {
  switch (object) {
    case 0:
    case "UNKNOWN_CAMERA_TYPE":
      return ClientInfo_CameraType.UNKNOWN_CAMERA_TYPE;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_CameraType.UNRECOGNIZED;
  }
}

export function clientInfo_CameraTypeToJSON(object: ClientInfo_CameraType): string {
  switch (object) {
    case ClientInfo_CameraType.UNKNOWN_CAMERA_TYPE:
      return "UNKNOWN_CAMERA_TYPE";
    case ClientInfo_CameraType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_UserInterfaceTheme {
  USER_INTERFACE_THEME_DARK = 0,
  USER_INTERFACE_THEME_LIGHT = 1,
  UNRECOGNIZED = -1,
}

export function clientInfo_UserInterfaceThemeFromJSON(object: any): ClientInfo_UserInterfaceTheme {
  switch (object) {
    case 0:
    case "USER_INTERFACE_THEME_DARK":
      return ClientInfo_UserInterfaceTheme.USER_INTERFACE_THEME_DARK;
    case 1:
    case "USER_INTERFACE_THEME_LIGHT":
      return ClientInfo_UserInterfaceTheme.USER_INTERFACE_THEME_LIGHT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_UserInterfaceTheme.UNRECOGNIZED;
  }
}

export function clientInfo_UserInterfaceThemeToJSON(object: ClientInfo_UserInterfaceTheme): string {
  switch (object) {
    case ClientInfo_UserInterfaceTheme.USER_INTERFACE_THEME_DARK:
      return "USER_INTERFACE_THEME_DARK";
    case ClientInfo_UserInterfaceTheme.USER_INTERFACE_THEME_LIGHT:
      return "USER_INTERFACE_THEME_LIGHT";
    case ClientInfo_UserInterfaceTheme.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_MainAppWebInfo {
  graftUrl?: string | undefined;
  pwaInstallabilityStatus?: ClientInfo_MainAppWebInfo_PwaInstallabilityStatus | undefined;
  webDisplayMode?: ClientInfo_MainAppWebInfo_WebDisplayMode | undefined;
  isWebNativeShareAvailable?: boolean | undefined;
  storeDigitalGoodsApiSupportStatus?: ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus | undefined;
}

export enum ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus {
  STORE_DIGITAL_GOODS_API_SUPPORT_STATUS_VAL0 = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatusFromJSON(
  object: any,
): ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus {
  switch (object) {
    case 0:
    case "STORE_DIGITAL_GOODS_API_SUPPORT_STATUS_VAL0":
      return ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus.STORE_DIGITAL_GOODS_API_SUPPORT_STATUS_VAL0;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus.UNRECOGNIZED;
  }
}

export function clientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatusToJSON(
  object: ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus,
): string {
  switch (object) {
    case ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus.STORE_DIGITAL_GOODS_API_SUPPORT_STATUS_VAL0:
      return "STORE_DIGITAL_GOODS_API_SUPPORT_STATUS_VAL0";
    case ClientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MainAppWebInfo_PwaInstallabilityStatus {
  PWA_INSTALLABILITY_STATUS_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MainAppWebInfo_PwaInstallabilityStatusFromJSON(
  object: any,
): ClientInfo_MainAppWebInfo_PwaInstallabilityStatus {
  switch (object) {
    case 0:
    case "PWA_INSTALLABILITY_STATUS_UNKNOWN":
      return ClientInfo_MainAppWebInfo_PwaInstallabilityStatus.PWA_INSTALLABILITY_STATUS_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MainAppWebInfo_PwaInstallabilityStatus.UNRECOGNIZED;
  }
}

export function clientInfo_MainAppWebInfo_PwaInstallabilityStatusToJSON(
  object: ClientInfo_MainAppWebInfo_PwaInstallabilityStatus,
): string {
  switch (object) {
    case ClientInfo_MainAppWebInfo_PwaInstallabilityStatus.PWA_INSTALLABILITY_STATUS_UNKNOWN:
      return "PWA_INSTALLABILITY_STATUS_UNKNOWN";
    case ClientInfo_MainAppWebInfo_PwaInstallabilityStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MainAppWebInfo_WebDisplayMode {
  WEB_DISPLAY_MODE_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MainAppWebInfo_WebDisplayModeFromJSON(
  object: any,
): ClientInfo_MainAppWebInfo_WebDisplayMode {
  switch (object) {
    case 0:
    case "WEB_DISPLAY_MODE_UNKNOWN":
      return ClientInfo_MainAppWebInfo_WebDisplayMode.WEB_DISPLAY_MODE_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MainAppWebInfo_WebDisplayMode.UNRECOGNIZED;
  }
}

export function clientInfo_MainAppWebInfo_WebDisplayModeToJSON(
  object: ClientInfo_MainAppWebInfo_WebDisplayMode,
): string {
  switch (object) {
    case ClientInfo_MainAppWebInfo_WebDisplayMode.WEB_DISPLAY_MODE_UNKNOWN:
      return "WEB_DISPLAY_MODE_UNKNOWN";
    case ClientInfo_MainAppWebInfo_WebDisplayMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_NotificationPermissionInfo {
  notificationsSetting?: ClientInfo_NotificationPermissionInfo_NotificationsSetting | undefined;
  lastDeviceOptInChangeTimeAgoSec?: number | undefined;
}

export enum ClientInfo_NotificationPermissionInfo_NotificationsSetting {
  NOTIFICATIONS_SETTING_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_NotificationPermissionInfo_NotificationsSettingFromJSON(
  object: any,
): ClientInfo_NotificationPermissionInfo_NotificationsSetting {
  switch (object) {
    case 0:
    case "NOTIFICATIONS_SETTING_UNKNOWN":
      return ClientInfo_NotificationPermissionInfo_NotificationsSetting.NOTIFICATIONS_SETTING_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_NotificationPermissionInfo_NotificationsSetting.UNRECOGNIZED;
  }
}

export function clientInfo_NotificationPermissionInfo_NotificationsSettingToJSON(
  object: ClientInfo_NotificationPermissionInfo_NotificationsSetting,
): string {
  switch (object) {
    case ClientInfo_NotificationPermissionInfo_NotificationsSetting.NOTIFICATIONS_SETTING_UNKNOWN:
      return "NOTIFICATIONS_SETTING_UNKNOWN";
    case ClientInfo_NotificationPermissionInfo_NotificationsSetting.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_GLDeviceInfo {
  glRenderer?: string | undefined;
  glEsVersionMajor?: number | undefined;
  glEsVersionMinor?: number | undefined;
}

export interface ClientInfo_SpacecastClientInfo {
  appliances?: ClientInfo_SpacecastClientInfo_SpacecastAppliance | undefined;
  interactionLevel?: ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel | undefined;
}

export enum ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel {
  UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_SpacecastClientInfo_SpacecastInteractionLevelFromJSON(
  object: any,
): ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel {
  switch (object) {
    case 0:
    case "UNKNOWN":
      return ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel.UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel.UNRECOGNIZED;
  }
}

export function clientInfo_SpacecastClientInfo_SpacecastInteractionLevelToJSON(
  object: ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel,
): string {
  switch (object) {
    case ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel.UNKNOWN:
      return "UNKNOWN";
    case ClientInfo_SpacecastClientInfo_SpacecastInteractionLevel.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_SpacecastClientInfo_SpacecastAppliance {
  contentProfileToken?: Uint8Array | undefined;
  status?: ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus | undefined;
  hostname?: string | undefined;
  active?: boolean | undefined;
  deviceId?: string | undefined;
}

export enum ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus {
  UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatusFromJSON(
  object: any,
): ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus {
  switch (object) {
    case 0:
    case "UNKNOWN":
      return ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus.UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus.UNRECOGNIZED;
  }
}

export function clientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatusToJSON(
  object: ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus,
): string {
  switch (object) {
    case ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus.UNKNOWN:
      return "UNKNOWN";
    case ClientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_MobileDataPlanInfo {
  cpid?: string | undefined;
  serializedDataPlanStatus?: string | undefined;
  dataSavingQualityPickerEnabled?: boolean | undefined;
  mccmnc?: string | undefined;
}

export interface ClientInfo_ConfigGroupsClientInfo {
  coldConfigData?: string | undefined;
  coldHashData?: string | undefined;
  hotHashData?: string | undefined;
  appInstallData?: string | undefined;
}

export interface ClientInfo_UnpluggedLocationInfo {
  latitudeE7?: number | undefined;
  longitudeE7?: number | undefined;
  localTimestampMs?: number | undefined;
  ipAddress?: string | undefined;
  timezone?: string | undefined;
  prefer24HourTime?: boolean | undefined;
  locationRadiusMeters?: number | undefined;
  isInitialLoad?: boolean | undefined;
  browserPermissionGranted?: boolean | undefined;
  clientPermissionState?: number | undefined;
  locationOverrideToken?: string | undefined;
}

export interface ClientInfo_KidsAppInfo {
  contentSettings?: ClientInfo_KidsAppInfo_KidsContentSettings | undefined;
  parentCurationMode?: ClientInfo_KidsAppInfo_KidsParentCurationMode | undefined;
  categorySettings?: ClientInfo_KidsAppInfo_KidsCategorySettings | undefined;
  userEducationSettings?: ClientInfo_KidsAppInfo_KidsUserEducationSettings | undefined;
}

export enum ClientInfo_KidsAppInfo_KidsParentCurationMode {
  KPCM_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_KidsAppInfo_KidsParentCurationModeFromJSON(
  object: any,
): ClientInfo_KidsAppInfo_KidsParentCurationMode {
  switch (object) {
    case 0:
    case "KPCM_UNKNOWN":
      return ClientInfo_KidsAppInfo_KidsParentCurationMode.KPCM_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_KidsAppInfo_KidsParentCurationMode.UNRECOGNIZED;
  }
}

export function clientInfo_KidsAppInfo_KidsParentCurationModeToJSON(
  object: ClientInfo_KidsAppInfo_KidsParentCurationMode,
): string {
  switch (object) {
    case ClientInfo_KidsAppInfo_KidsParentCurationMode.KPCM_UNKNOWN:
      return "KPCM_UNKNOWN";
    case ClientInfo_KidsAppInfo_KidsParentCurationMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_KidsAppInfo_KidsContentSettings {
  kidsNoSearchMode?: ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode | undefined;
  ageUpMode?: ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode | undefined;
  contentDensity?: ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity | undefined;
}

export enum ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode {
  YT_KIDS_NO_SEARCH_MODE_OFF = 0,
  YT_KIDS_NO_SEARCH_MODE_ON = 1,
  UNRECOGNIZED = -1,
}

export function clientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchModeFromJSON(
  object: any,
): ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode {
  switch (object) {
    case 0:
    case "YT_KIDS_NO_SEARCH_MODE_OFF":
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.YT_KIDS_NO_SEARCH_MODE_OFF;
    case 1:
    case "YT_KIDS_NO_SEARCH_MODE_ON":
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.YT_KIDS_NO_SEARCH_MODE_ON;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.UNRECOGNIZED;
  }
}

export function clientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchModeToJSON(
  object: ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode,
): string {
  switch (object) {
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.YT_KIDS_NO_SEARCH_MODE_OFF:
      return "YT_KIDS_NO_SEARCH_MODE_OFF";
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.YT_KIDS_NO_SEARCH_MODE_ON:
      return "YT_KIDS_NO_SEARCH_MODE_ON";
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode {
  YT_KIDS_AGE_UP_MODE_OFF = 0,
  YT_KIDS_AGE_UP_MODE_ON = 1,
  UNRECOGNIZED = -1,
}

export function clientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpModeFromJSON(
  object: any,
): ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode {
  switch (object) {
    case 0:
    case "YT_KIDS_AGE_UP_MODE_OFF":
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.YT_KIDS_AGE_UP_MODE_OFF;
    case 1:
    case "YT_KIDS_AGE_UP_MODE_ON":
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.YT_KIDS_AGE_UP_MODE_ON;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.UNRECOGNIZED;
  }
}

export function clientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpModeToJSON(
  object: ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode,
): string {
  switch (object) {
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.YT_KIDS_AGE_UP_MODE_OFF:
      return "YT_KIDS_AGE_UP_MODE_OFF";
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.YT_KIDS_AGE_UP_MODE_ON:
      return "YT_KIDS_AGE_UP_MODE_ON";
    case ClientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity {
  /** YT_KIDS_CONTENT_DENSITY_VAL1 - @TODO: Check these. */
  YT_KIDS_CONTENT_DENSITY_VAL1 = 0,
  YT_KIDS_CONTENT_DENSITY_VAL2 = 1,
  YT_KIDS_CONTENT_DENSITY_VAL3 = 2,
  UNRECOGNIZED = -1,
}

export function clientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensityFromJSON(
  object: any,
): ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity {
  switch (object) {
    case 0:
    case "YT_KIDS_CONTENT_DENSITY_VAL1":
      return ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL1;
    case 1:
    case "YT_KIDS_CONTENT_DENSITY_VAL2":
      return ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL2;
    case 2:
    case "YT_KIDS_CONTENT_DENSITY_VAL3":
      return ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL3;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.UNRECOGNIZED;
  }
}

export function clientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensityToJSON(
  object: ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity,
): string {
  switch (object) {
    case ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL1:
      return "YT_KIDS_CONTENT_DENSITY_VAL1";
    case ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL2:
      return "YT_KIDS_CONTENT_DENSITY_VAL2";
    case ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.YT_KIDS_CONTENT_DENSITY_VAL3:
      return "YT_KIDS_CONTENT_DENSITY_VAL3";
    case ClientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensity.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_KidsAppInfo_KidsCategorySettings {
  enabledCategories?: string | undefined;
}

export interface ClientInfo_KidsAppInfo_KidsUserEducationSettings {
  hasSeenHomeChipBarUserEducation?: boolean | undefined;
  hasSeenHomePivotBarUserEducation?: boolean | undefined;
  hasSeenParentMuirUserEducation?: boolean | undefined;
}

export interface ClientInfo_MusicAppInfo {
  playBackMode?: ClientInfo_MusicAppInfo_MusicPlayBackMode | undefined;
  musicLocationMasterSwitch?: ClientInfo_MusicAppInfo_MusicLocationMasterSwitch | undefined;
  musicActivityMasterSwitch?: ClientInfo_MusicAppInfo_MusicActivityMasterSwitch | undefined;
  offlineMixtapeEnabled?: boolean | undefined;
  autoOfflineEnabled?: boolean | undefined;
  iosBackgroundRefreshStatus?: ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus | undefined;
  smartDownloadsSongLimit?: number | undefined;
  transitionedFromMixtapeToSmartDownloads?: boolean | undefined;
  pwaInstallabilityStatus?: ClientInfo_MusicAppInfo_PwaInstallabilityStatus | undefined;
  webDisplayMode?: ClientInfo_MusicAppInfo_WebDisplayMode | undefined;
  musicTier?: ClientInfo_MusicAppInfo_MusicTier | undefined;
  storeDigitalGoodsApiSupportStatus?: ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus | undefined;
  smartDownloadsTimeSinceLastOptOutSec?: number | undefined;
}

export enum ClientInfo_MusicAppInfo_MusicPlayBackMode {
  MPBM_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_MusicPlayBackModeFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_MusicPlayBackMode {
  switch (object) {
    case 0:
    case "MPBM_UNKNOWN":
      return ClientInfo_MusicAppInfo_MusicPlayBackMode.MPBM_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_MusicPlayBackMode.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_MusicPlayBackModeToJSON(
  object: ClientInfo_MusicAppInfo_MusicPlayBackMode,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_MusicPlayBackMode.MPBM_UNKNOWN:
      return "MPBM_UNKNOWN";
    case ClientInfo_MusicAppInfo_MusicPlayBackMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_MusicLocationMasterSwitch {
  MLMS_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_MusicLocationMasterSwitchFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_MusicLocationMasterSwitch {
  switch (object) {
    case 0:
    case "MLMS_UNKNOWN":
      return ClientInfo_MusicAppInfo_MusicLocationMasterSwitch.MLMS_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_MusicLocationMasterSwitch.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_MusicLocationMasterSwitchToJSON(
  object: ClientInfo_MusicAppInfo_MusicLocationMasterSwitch,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_MusicLocationMasterSwitch.MLMS_UNKNOWN:
      return "MLMS_UNKNOWN";
    case ClientInfo_MusicAppInfo_MusicLocationMasterSwitch.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_MusicActivityMasterSwitch {
  MAMS_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_MusicActivityMasterSwitchFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_MusicActivityMasterSwitch {
  switch (object) {
    case 0:
    case "MAMS_UNKNOWN":
      return ClientInfo_MusicAppInfo_MusicActivityMasterSwitch.MAMS_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_MusicActivityMasterSwitch.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_MusicActivityMasterSwitchToJSON(
  object: ClientInfo_MusicAppInfo_MusicActivityMasterSwitch,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_MusicActivityMasterSwitch.MAMS_UNKNOWN:
      return "MAMS_UNKNOWN";
    case ClientInfo_MusicAppInfo_MusicActivityMasterSwitch.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus {
  UNKNOWN_STATUS = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_IosBackgroundRefreshStatusFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus {
  switch (object) {
    case 0:
    case "UNKNOWN_STATUS":
      return ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus.UNKNOWN_STATUS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_IosBackgroundRefreshStatusToJSON(
  object: ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus.UNKNOWN_STATUS:
      return "UNKNOWN_STATUS";
    case ClientInfo_MusicAppInfo_IosBackgroundRefreshStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_PwaInstallabilityStatus {
  PIS_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_PwaInstallabilityStatusFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_PwaInstallabilityStatus {
  switch (object) {
    case 0:
    case "PIS_UNKNOWN":
      return ClientInfo_MusicAppInfo_PwaInstallabilityStatus.PIS_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_PwaInstallabilityStatus.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_PwaInstallabilityStatusToJSON(
  object: ClientInfo_MusicAppInfo_PwaInstallabilityStatus,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_PwaInstallabilityStatus.PIS_UNKNOWN:
      return "PIS_UNKNOWN";
    case ClientInfo_MusicAppInfo_PwaInstallabilityStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_WebDisplayMode {
  WDM_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_WebDisplayModeFromJSON(object: any): ClientInfo_MusicAppInfo_WebDisplayMode {
  switch (object) {
    case 0:
    case "WDM_UNKNOWN":
      return ClientInfo_MusicAppInfo_WebDisplayMode.WDM_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_WebDisplayMode.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_WebDisplayModeToJSON(object: ClientInfo_MusicAppInfo_WebDisplayMode): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_WebDisplayMode.WDM_UNKNOWN:
      return "WDM_UNKNOWN";
    case ClientInfo_MusicAppInfo_WebDisplayMode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_MusicTier {
  UNKNOWN_TIER = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_MusicTierFromJSON(object: any): ClientInfo_MusicAppInfo_MusicTier {
  switch (object) {
    case 0:
    case "UNKNOWN_TIER":
      return ClientInfo_MusicAppInfo_MusicTier.UNKNOWN_TIER;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_MusicTier.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_MusicTierToJSON(object: ClientInfo_MusicAppInfo_MusicTier): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_MusicTier.UNKNOWN_TIER:
      return "UNKNOWN_TIER";
    case ClientInfo_MusicAppInfo_MusicTier.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus {
  SDGAS_UNKNOWN = 0,
  UNRECOGNIZED = -1,
}

export function clientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatusFromJSON(
  object: any,
): ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus {
  switch (object) {
    case 0:
    case "SDGAS_UNKNOWN":
      return ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus.SDGAS_UNKNOWN;
    case -1:
    case "UNRECOGNIZED":
    default:
      return ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus.UNRECOGNIZED;
  }
}

export function clientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatusToJSON(
  object: ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus,
): string {
  switch (object) {
    case ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus.SDGAS_UNKNOWN:
      return "SDGAS_UNKNOWN";
    case ClientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface ClientInfo_TvAppInfo {
  mdxImpactedSessionsServerEvents?: string | undefined;
  enablePrivacyFilter?: boolean | undefined;
  zylonLeftNav?: boolean | undefined;
  certificationScope?: string | undefined;
  livingRoomPoTokenId?: string | undefined;
  jsEngineString?: string | undefined;
  voiceCapability?: ClientInfo_TvAppInfo_VoiceCapability | undefined;
  systemIntegrator?: string | undefined;
  androidBuildFingerprint?: string | undefined;
  cobaltAppVersion?: string | undefined;
  cobaltStarboardVersion?: string | undefined;
  useStartPlaybackPreviewCommand?: boolean | undefined;
  shouldShowPersistentSigninOnHome?: boolean | undefined;
  androidPlayServicesVersion?: string | undefined;
}

export interface ClientInfo_TvAppInfo_VoiceCapability {
  hasSoftMicSupport?: boolean | undefined;
  hasHardMicSupport?: boolean | undefined;
}

export interface ClientInfo_UnpluggedAppInfo {
  enableFilterMode?: boolean | undefined;
  iosNotificationPermission?: boolean | undefined;
  forceEnableEpg3?: boolean | undefined;
}

export interface ClientInfo_LocationInfo {
  locationInfoStatus?: number | undefined;
  ulrStatus?: ClientInfo_LocationInfo_UrlStatus | undefined;
  latitudeE7?: string | undefined;
  longitudeE7?: string | undefined;
  horizontalAccuracyMeters?: string | undefined;
  locationFreshnessMs?: string | undefined;
  locationPermissionAuthorizationStatus?: number | undefined;
  locationOverrideToken?: string | undefined;
  forceLocationPlayabilityTokenRefresh?: boolean | undefined;
}

export interface ClientInfo_LocationInfo_UrlStatus {
  reportingEnabledSetting?: number | undefined;
  historyEnabledSetting?: number | undefined;
  isAllowed?: boolean | undefined;
  isActive?: boolean | undefined;
}

export interface ClientInfo_HomeGroupInfo {
  isPartOfGroup?: boolean | undefined;
  isGroup?: boolean | undefined;
}

function createBaseClientInfo(): ClientInfo {
  return {
    hl: undefined,
    gl: undefined,
    remoteHost: undefined,
    deviceId: undefined,
    debugDeviceIdOverride: undefined,
    carrierGeo: undefined,
    crackedHl: undefined,
    deviceMake: undefined,
    deviceModel: undefined,
    visitorData: undefined,
    userAgent: undefined,
    clientName: undefined,
    clientVersion: undefined,
    osName: undefined,
    osVersion: undefined,
    projectId: undefined,
    acceptLanguage: undefined,
    acceptRegion: undefined,
    originalUrl: undefined,
    rawDeviceId: undefined,
    configData: undefined,
    spacecastToken: undefined,
    internalGeo: undefined,
    screenWidthPoints: undefined,
    screenHeightPoints: undefined,
    screenWidthInches: undefined,
    screenHeightInches: undefined,
    screenPixelDensity: undefined,
    platform: undefined,
    spacecastClientInfo: undefined,
    clientFormFactor: undefined,
    forwardedFor: undefined,
    mobileDataPlanInfo: undefined,
    gmscoreVersionCode: undefined,
    webpSupport: undefined,
    cameraType: undefined,
    experimentsToken: undefined,
    windowWidthPoints: undefined,
    windowHeightPoints: undefined,
    configInfo: undefined,
    unpluggedLocationInfo: undefined,
    androidSdkVersion: undefined,
    screenDensityFloat: undefined,
    firstTimeSignInExperimentIds: undefined,
    utcOffsetMinutes: undefined,
    animatedWebpSupport: undefined,
    kidsAppInfo: undefined,
    musicAppInfo: undefined,
    tvAppInfo: undefined,
    internalGeoIp: undefined,
    unpluggedAppInfo: undefined,
    locationInfo: undefined,
    contentSizeCategory: undefined,
    fontScale: undefined,
    userInterfaceTheme: undefined,
    timeZone: undefined,
    homeGroupInfo: undefined,
    emlTemplateContext: undefined,
    coldAppBundleConfigData: undefined,
    browserName: undefined,
    browserVersion: undefined,
    locationPlayabilityToken: undefined,
    chipset: undefined,
    firmwareVersion: undefined,
    memoryTotalKbytes: undefined,
    mainAppWebInfo: undefined,
    notificationPermissionInfo: undefined,
    deviceBrand: undefined,
    glDeviceInfo: undefined,
  };
}

export const ClientInfo: MessageFns<ClientInfo> = {
  encode(message: ClientInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.hl !== undefined) {
      writer.uint32(10).string(message.hl);
    }
    if (message.gl !== undefined) {
      writer.uint32(18).string(message.gl);
    }
    if (message.remoteHost !== undefined) {
      writer.uint32(34).string(message.remoteHost);
    }
    if (message.deviceId !== undefined) {
      writer.uint32(50).string(message.deviceId);
    }
    if (message.debugDeviceIdOverride !== undefined) {
      writer.uint32(66).string(message.debugDeviceIdOverride);
    }
    if (message.carrierGeo !== undefined) {
      writer.uint32(82).string(message.carrierGeo);
    }
    if (message.crackedHl !== undefined) {
      writer.uint32(88).bool(message.crackedHl);
    }
    if (message.deviceMake !== undefined) {
      writer.uint32(98).string(message.deviceMake);
    }
    if (message.deviceModel !== undefined) {
      writer.uint32(106).string(message.deviceModel);
    }
    if (message.visitorData !== undefined) {
      writer.uint32(114).string(message.visitorData);
    }
    if (message.userAgent !== undefined) {
      writer.uint32(122).string(message.userAgent);
    }
    if (message.clientName !== undefined) {
      writer.uint32(128).int32(message.clientName);
    }
    if (message.clientVersion !== undefined) {
      writer.uint32(138).string(message.clientVersion);
    }
    if (message.osName !== undefined) {
      writer.uint32(146).string(message.osName);
    }
    if (message.osVersion !== undefined) {
      writer.uint32(154).string(message.osVersion);
    }
    if (message.projectId !== undefined) {
      writer.uint32(162).string(message.projectId);
    }
    if (message.acceptLanguage !== undefined) {
      writer.uint32(170).string(message.acceptLanguage);
    }
    if (message.acceptRegion !== undefined) {
      writer.uint32(178).string(message.acceptRegion);
    }
    if (message.originalUrl !== undefined) {
      writer.uint32(186).string(message.originalUrl);
    }
    if (message.rawDeviceId !== undefined) {
      writer.uint32(202).string(message.rawDeviceId);
    }
    if (message.configData !== undefined) {
      writer.uint32(218).string(message.configData);
    }
    if (message.spacecastToken !== undefined) {
      writer.uint32(250).string(message.spacecastToken);
    }
    if (message.internalGeo !== undefined) {
      writer.uint32(274).string(message.internalGeo);
    }
    if (message.screenWidthPoints !== undefined) {
      writer.uint32(296).int32(message.screenWidthPoints);
    }
    if (message.screenHeightPoints !== undefined) {
      writer.uint32(304).int32(message.screenHeightPoints);
    }
    if (message.screenWidthInches !== undefined) {
      writer.uint32(317).float(message.screenWidthInches);
    }
    if (message.screenHeightInches !== undefined) {
      writer.uint32(325).float(message.screenHeightInches);
    }
    if (message.screenPixelDensity !== undefined) {
      writer.uint32(328).int32(message.screenPixelDensity);
    }
    if (message.platform !== undefined) {
      writer.uint32(336).int32(message.platform);
    }
    if (message.spacecastClientInfo !== undefined) {
      ClientInfo_SpacecastClientInfo.encode(message.spacecastClientInfo, writer.uint32(362).fork()).join();
    }
    if (message.clientFormFactor !== undefined) {
      writer.uint32(368).int32(message.clientFormFactor);
    }
    if (message.forwardedFor !== undefined) {
      writer.uint32(386).string(message.forwardedFor);
    }
    if (message.mobileDataPlanInfo !== undefined) {
      ClientInfo_MobileDataPlanInfo.encode(message.mobileDataPlanInfo, writer.uint32(394).fork()).join();
    }
    if (message.gmscoreVersionCode !== undefined) {
      writer.uint32(400).int32(message.gmscoreVersionCode);
    }
    if (message.webpSupport !== undefined) {
      writer.uint32(408).bool(message.webpSupport);
    }
    if (message.cameraType !== undefined) {
      writer.uint32(416).int32(message.cameraType);
    }
    if (message.experimentsToken !== undefined) {
      writer.uint32(434).string(message.experimentsToken);
    }
    if (message.windowWidthPoints !== undefined) {
      writer.uint32(440).int32(message.windowWidthPoints);
    }
    if (message.windowHeightPoints !== undefined) {
      writer.uint32(448).int32(message.windowHeightPoints);
    }
    if (message.configInfo !== undefined) {
      ClientInfo_ConfigGroupsClientInfo.encode(message.configInfo, writer.uint32(498).fork()).join();
    }
    if (message.unpluggedLocationInfo !== undefined) {
      ClientInfo_UnpluggedLocationInfo.encode(message.unpluggedLocationInfo, writer.uint32(506).fork()).join();
    }
    if (message.androidSdkVersion !== undefined) {
      writer.uint32(512).int32(message.androidSdkVersion);
    }
    if (message.screenDensityFloat !== undefined) {
      writer.uint32(525).float(message.screenDensityFloat);
    }
    if (message.firstTimeSignInExperimentIds !== undefined) {
      writer.uint32(528).int32(message.firstTimeSignInExperimentIds);
    }
    if (message.utcOffsetMinutes !== undefined) {
      writer.uint32(536).int32(message.utcOffsetMinutes);
    }
    if (message.animatedWebpSupport !== undefined) {
      writer.uint32(544).bool(message.animatedWebpSupport);
    }
    if (message.kidsAppInfo !== undefined) {
      ClientInfo_KidsAppInfo.encode(message.kidsAppInfo, writer.uint32(554).fork()).join();
    }
    if (message.musicAppInfo !== undefined) {
      ClientInfo_MusicAppInfo.encode(message.musicAppInfo, writer.uint32(562).fork()).join();
    }
    if (message.tvAppInfo !== undefined) {
      ClientInfo_TvAppInfo.encode(message.tvAppInfo, writer.uint32(570).fork()).join();
    }
    if (message.internalGeoIp !== undefined) {
      writer.uint32(578).string(message.internalGeoIp);
    }
    if (message.unpluggedAppInfo !== undefined) {
      ClientInfo_UnpluggedAppInfo.encode(message.unpluggedAppInfo, writer.uint32(586).fork()).join();
    }
    if (message.locationInfo !== undefined) {
      ClientInfo_LocationInfo.encode(message.locationInfo, writer.uint32(594).fork()).join();
    }
    if (message.contentSizeCategory !== undefined) {
      writer.uint32(610).string(message.contentSizeCategory);
    }
    if (message.fontScale !== undefined) {
      writer.uint32(621).float(message.fontScale);
    }
    if (message.userInterfaceTheme !== undefined) {
      writer.uint32(624).int32(message.userInterfaceTheme);
    }
    if (message.timeZone !== undefined) {
      writer.uint32(642).string(message.timeZone);
    }
    if (message.homeGroupInfo !== undefined) {
      ClientInfo_HomeGroupInfo.encode(message.homeGroupInfo, writer.uint32(650).fork()).join();
    }
    if (message.emlTemplateContext !== undefined) {
      writer.uint32(674).bytes(message.emlTemplateContext);
    }
    if (message.coldAppBundleConfigData !== undefined) {
      writer.uint32(682).bytes(message.coldAppBundleConfigData);
    }
    if (message.browserName !== undefined) {
      writer.uint32(698).string(message.browserName);
    }
    if (message.browserVersion !== undefined) {
      writer.uint32(706).string(message.browserVersion);
    }
    if (message.locationPlayabilityToken !== undefined) {
      writer.uint32(714).string(message.locationPlayabilityToken);
    }
    if (message.chipset !== undefined) {
      writer.uint32(738).string(message.chipset);
    }
    if (message.firmwareVersion !== undefined) {
      writer.uint32(746).string(message.firmwareVersion);
    }
    if (message.memoryTotalKbytes !== undefined) {
      writer.uint32(760).int64(message.memoryTotalKbytes);
    }
    if (message.mainAppWebInfo !== undefined) {
      ClientInfo_MainAppWebInfo.encode(message.mainAppWebInfo, writer.uint32(770).fork()).join();
    }
    if (message.notificationPermissionInfo !== undefined) {
      ClientInfo_NotificationPermissionInfo.encode(message.notificationPermissionInfo, writer.uint32(778).fork())
        .join();
    }
    if (message.deviceBrand !== undefined) {
      writer.uint32(786).string(message.deviceBrand);
    }
    if (message.glDeviceInfo !== undefined) {
      ClientInfo_GLDeviceInfo.encode(message.glDeviceInfo, writer.uint32(818).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.hl = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.gl = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.remoteHost = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.deviceId = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.debugDeviceIdOverride = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.carrierGeo = reader.string();
          continue;
        case 11:
          if (tag !== 88) {
            break;
          }

          message.crackedHl = reader.bool();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.deviceMake = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.deviceModel = reader.string();
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.visitorData = reader.string();
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.userAgent = reader.string();
          continue;
        case 16:
          if (tag !== 128) {
            break;
          }

          message.clientName = reader.int32();
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.clientVersion = reader.string();
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.osName = reader.string();
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.osVersion = reader.string();
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.projectId = reader.string();
          continue;
        case 21:
          if (tag !== 170) {
            break;
          }

          message.acceptLanguage = reader.string();
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.acceptRegion = reader.string();
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.originalUrl = reader.string();
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.rawDeviceId = reader.string();
          continue;
        case 27:
          if (tag !== 218) {
            break;
          }

          message.configData = reader.string();
          continue;
        case 31:
          if (tag !== 250) {
            break;
          }

          message.spacecastToken = reader.string();
          continue;
        case 34:
          if (tag !== 274) {
            break;
          }

          message.internalGeo = reader.string();
          continue;
        case 37:
          if (tag !== 296) {
            break;
          }

          message.screenWidthPoints = reader.int32();
          continue;
        case 38:
          if (tag !== 304) {
            break;
          }

          message.screenHeightPoints = reader.int32();
          continue;
        case 39:
          if (tag !== 317) {
            break;
          }

          message.screenWidthInches = reader.float();
          continue;
        case 40:
          if (tag !== 325) {
            break;
          }

          message.screenHeightInches = reader.float();
          continue;
        case 41:
          if (tag !== 328) {
            break;
          }

          message.screenPixelDensity = reader.int32();
          continue;
        case 42:
          if (tag !== 336) {
            break;
          }

          message.platform = reader.int32();
          continue;
        case 45:
          if (tag !== 362) {
            break;
          }

          message.spacecastClientInfo = ClientInfo_SpacecastClientInfo.decode(reader, reader.uint32());
          continue;
        case 46:
          if (tag !== 368) {
            break;
          }

          message.clientFormFactor = reader.int32() as any;
          continue;
        case 48:
          if (tag !== 386) {
            break;
          }

          message.forwardedFor = reader.string();
          continue;
        case 49:
          if (tag !== 394) {
            break;
          }

          message.mobileDataPlanInfo = ClientInfo_MobileDataPlanInfo.decode(reader, reader.uint32());
          continue;
        case 50:
          if (tag !== 400) {
            break;
          }

          message.gmscoreVersionCode = reader.int32();
          continue;
        case 51:
          if (tag !== 408) {
            break;
          }

          message.webpSupport = reader.bool();
          continue;
        case 52:
          if (tag !== 416) {
            break;
          }

          message.cameraType = reader.int32() as any;
          continue;
        case 54:
          if (tag !== 434) {
            break;
          }

          message.experimentsToken = reader.string();
          continue;
        case 55:
          if (tag !== 440) {
            break;
          }

          message.windowWidthPoints = reader.int32();
          continue;
        case 56:
          if (tag !== 448) {
            break;
          }

          message.windowHeightPoints = reader.int32();
          continue;
        case 62:
          if (tag !== 498) {
            break;
          }

          message.configInfo = ClientInfo_ConfigGroupsClientInfo.decode(reader, reader.uint32());
          continue;
        case 63:
          if (tag !== 506) {
            break;
          }

          message.unpluggedLocationInfo = ClientInfo_UnpluggedLocationInfo.decode(reader, reader.uint32());
          continue;
        case 64:
          if (tag !== 512) {
            break;
          }

          message.androidSdkVersion = reader.int32();
          continue;
        case 65:
          if (tag !== 525) {
            break;
          }

          message.screenDensityFloat = reader.float();
          continue;
        case 66:
          if (tag !== 528) {
            break;
          }

          message.firstTimeSignInExperimentIds = reader.int32();
          continue;
        case 67:
          if (tag !== 536) {
            break;
          }

          message.utcOffsetMinutes = reader.int32();
          continue;
        case 68:
          if (tag !== 544) {
            break;
          }

          message.animatedWebpSupport = reader.bool();
          continue;
        case 69:
          if (tag !== 554) {
            break;
          }

          message.kidsAppInfo = ClientInfo_KidsAppInfo.decode(reader, reader.uint32());
          continue;
        case 70:
          if (tag !== 562) {
            break;
          }

          message.musicAppInfo = ClientInfo_MusicAppInfo.decode(reader, reader.uint32());
          continue;
        case 71:
          if (tag !== 570) {
            break;
          }

          message.tvAppInfo = ClientInfo_TvAppInfo.decode(reader, reader.uint32());
          continue;
        case 72:
          if (tag !== 578) {
            break;
          }

          message.internalGeoIp = reader.string();
          continue;
        case 73:
          if (tag !== 586) {
            break;
          }

          message.unpluggedAppInfo = ClientInfo_UnpluggedAppInfo.decode(reader, reader.uint32());
          continue;
        case 74:
          if (tag !== 594) {
            break;
          }

          message.locationInfo = ClientInfo_LocationInfo.decode(reader, reader.uint32());
          continue;
        case 76:
          if (tag !== 610) {
            break;
          }

          message.contentSizeCategory = reader.string();
          continue;
        case 77:
          if (tag !== 621) {
            break;
          }

          message.fontScale = reader.float();
          continue;
        case 78:
          if (tag !== 624) {
            break;
          }

          message.userInterfaceTheme = reader.int32() as any;
          continue;
        case 80:
          if (tag !== 642) {
            break;
          }

          message.timeZone = reader.string();
          continue;
        case 81:
          if (tag !== 650) {
            break;
          }

          message.homeGroupInfo = ClientInfo_HomeGroupInfo.decode(reader, reader.uint32());
          continue;
        case 84:
          if (tag !== 674) {
            break;
          }

          message.emlTemplateContext = reader.bytes();
          continue;
        case 85:
          if (tag !== 682) {
            break;
          }

          message.coldAppBundleConfigData = reader.bytes();
          continue;
        case 87:
          if (tag !== 698) {
            break;
          }

          message.browserName = reader.string();
          continue;
        case 88:
          if (tag !== 706) {
            break;
          }

          message.browserVersion = reader.string();
          continue;
        case 89:
          if (tag !== 714) {
            break;
          }

          message.locationPlayabilityToken = reader.string();
          continue;
        case 92:
          if (tag !== 738) {
            break;
          }

          message.chipset = reader.string();
          continue;
        case 93:
          if (tag !== 746) {
            break;
          }

          message.firmwareVersion = reader.string();
          continue;
        case 95:
          if (tag !== 760) {
            break;
          }

          message.memoryTotalKbytes = longToNumber(reader.int64());
          continue;
        case 96:
          if (tag !== 770) {
            break;
          }

          message.mainAppWebInfo = ClientInfo_MainAppWebInfo.decode(reader, reader.uint32());
          continue;
        case 97:
          if (tag !== 778) {
            break;
          }

          message.notificationPermissionInfo = ClientInfo_NotificationPermissionInfo.decode(reader, reader.uint32());
          continue;
        case 98:
          if (tag !== 786) {
            break;
          }

          message.deviceBrand = reader.string();
          continue;
        case 102:
          if (tag !== 818) {
            break;
          }

          message.glDeviceInfo = ClientInfo_GLDeviceInfo.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo {
    return {
      hl: isSet(object.hl) ? globalThis.String(object.hl) : undefined,
      gl: isSet(object.gl) ? globalThis.String(object.gl) : undefined,
      remoteHost: isSet(object.remoteHost) ? globalThis.String(object.remoteHost) : undefined,
      deviceId: isSet(object.deviceId) ? globalThis.String(object.deviceId) : undefined,
      debugDeviceIdOverride: isSet(object.debugDeviceIdOverride)
        ? globalThis.String(object.debugDeviceIdOverride)
        : undefined,
      carrierGeo: isSet(object.carrierGeo) ? globalThis.String(object.carrierGeo) : undefined,
      crackedHl: isSet(object.crackedHl) ? globalThis.Boolean(object.crackedHl) : undefined,
      deviceMake: isSet(object.deviceMake) ? globalThis.String(object.deviceMake) : undefined,
      deviceModel: isSet(object.deviceModel) ? globalThis.String(object.deviceModel) : undefined,
      visitorData: isSet(object.visitorData) ? globalThis.String(object.visitorData) : undefined,
      userAgent: isSet(object.userAgent) ? globalThis.String(object.userAgent) : undefined,
      clientName: isSet(object.clientName) ? globalThis.Number(object.clientName) : undefined,
      clientVersion: isSet(object.clientVersion) ? globalThis.String(object.clientVersion) : undefined,
      osName: isSet(object.osName) ? globalThis.String(object.osName) : undefined,
      osVersion: isSet(object.osVersion) ? globalThis.String(object.osVersion) : undefined,
      projectId: isSet(object.projectId) ? globalThis.String(object.projectId) : undefined,
      acceptLanguage: isSet(object.acceptLanguage) ? globalThis.String(object.acceptLanguage) : undefined,
      acceptRegion: isSet(object.acceptRegion) ? globalThis.String(object.acceptRegion) : undefined,
      originalUrl: isSet(object.originalUrl) ? globalThis.String(object.originalUrl) : undefined,
      rawDeviceId: isSet(object.rawDeviceId) ? globalThis.String(object.rawDeviceId) : undefined,
      configData: isSet(object.configData) ? globalThis.String(object.configData) : undefined,
      spacecastToken: isSet(object.spacecastToken) ? globalThis.String(object.spacecastToken) : undefined,
      internalGeo: isSet(object.internalGeo) ? globalThis.String(object.internalGeo) : undefined,
      screenWidthPoints: isSet(object.screenWidthPoints) ? globalThis.Number(object.screenWidthPoints) : undefined,
      screenHeightPoints: isSet(object.screenHeightPoints) ? globalThis.Number(object.screenHeightPoints) : undefined,
      screenWidthInches: isSet(object.screenWidthInches) ? globalThis.Number(object.screenWidthInches) : undefined,
      screenHeightInches: isSet(object.screenHeightInches) ? globalThis.Number(object.screenHeightInches) : undefined,
      screenPixelDensity: isSet(object.screenPixelDensity) ? globalThis.Number(object.screenPixelDensity) : undefined,
      platform: isSet(object.platform) ? globalThis.Number(object.platform) : undefined,
      spacecastClientInfo: isSet(object.spacecastClientInfo)
        ? ClientInfo_SpacecastClientInfo.fromJSON(object.spacecastClientInfo)
        : undefined,
      clientFormFactor: isSet(object.clientFormFactor)
        ? clientInfo_ClientFormFactorFromJSON(object.clientFormFactor)
        : undefined,
      forwardedFor: isSet(object.forwardedFor) ? globalThis.String(object.forwardedFor) : undefined,
      mobileDataPlanInfo: isSet(object.mobileDataPlanInfo)
        ? ClientInfo_MobileDataPlanInfo.fromJSON(object.mobileDataPlanInfo)
        : undefined,
      gmscoreVersionCode: isSet(object.gmscoreVersionCode) ? globalThis.Number(object.gmscoreVersionCode) : undefined,
      webpSupport: isSet(object.webpSupport) ? globalThis.Boolean(object.webpSupport) : undefined,
      cameraType: isSet(object.cameraType) ? clientInfo_CameraTypeFromJSON(object.cameraType) : undefined,
      experimentsToken: isSet(object.experimentsToken) ? globalThis.String(object.experimentsToken) : undefined,
      windowWidthPoints: isSet(object.windowWidthPoints) ? globalThis.Number(object.windowWidthPoints) : undefined,
      windowHeightPoints: isSet(object.windowHeightPoints) ? globalThis.Number(object.windowHeightPoints) : undefined,
      configInfo: isSet(object.configInfo) ? ClientInfo_ConfigGroupsClientInfo.fromJSON(object.configInfo) : undefined,
      unpluggedLocationInfo: isSet(object.unpluggedLocationInfo)
        ? ClientInfo_UnpluggedLocationInfo.fromJSON(object.unpluggedLocationInfo)
        : undefined,
      androidSdkVersion: isSet(object.androidSdkVersion) ? globalThis.Number(object.androidSdkVersion) : undefined,
      screenDensityFloat: isSet(object.screenDensityFloat) ? globalThis.Number(object.screenDensityFloat) : undefined,
      firstTimeSignInExperimentIds: isSet(object.firstTimeSignInExperimentIds)
        ? globalThis.Number(object.firstTimeSignInExperimentIds)
        : undefined,
      utcOffsetMinutes: isSet(object.utcOffsetMinutes) ? globalThis.Number(object.utcOffsetMinutes) : undefined,
      animatedWebpSupport: isSet(object.animatedWebpSupport)
        ? globalThis.Boolean(object.animatedWebpSupport)
        : undefined,
      kidsAppInfo: isSet(object.kidsAppInfo) ? ClientInfo_KidsAppInfo.fromJSON(object.kidsAppInfo) : undefined,
      musicAppInfo: isSet(object.musicAppInfo) ? ClientInfo_MusicAppInfo.fromJSON(object.musicAppInfo) : undefined,
      tvAppInfo: isSet(object.tvAppInfo) ? ClientInfo_TvAppInfo.fromJSON(object.tvAppInfo) : undefined,
      internalGeoIp: isSet(object.internalGeoIp) ? globalThis.String(object.internalGeoIp) : undefined,
      unpluggedAppInfo: isSet(object.unpluggedAppInfo)
        ? ClientInfo_UnpluggedAppInfo.fromJSON(object.unpluggedAppInfo)
        : undefined,
      locationInfo: isSet(object.locationInfo) ? ClientInfo_LocationInfo.fromJSON(object.locationInfo) : undefined,
      contentSizeCategory: isSet(object.contentSizeCategory)
        ? globalThis.String(object.contentSizeCategory)
        : undefined,
      fontScale: isSet(object.fontScale) ? globalThis.Number(object.fontScale) : undefined,
      userInterfaceTheme: isSet(object.userInterfaceTheme)
        ? clientInfo_UserInterfaceThemeFromJSON(object.userInterfaceTheme)
        : undefined,
      timeZone: isSet(object.timeZone) ? globalThis.String(object.timeZone) : undefined,
      homeGroupInfo: isSet(object.homeGroupInfo) ? ClientInfo_HomeGroupInfo.fromJSON(object.homeGroupInfo) : undefined,
      emlTemplateContext: isSet(object.emlTemplateContext) ? bytesFromBase64(object.emlTemplateContext) : undefined,
      coldAppBundleConfigData: isSet(object.coldAppBundleConfigData)
        ? bytesFromBase64(object.coldAppBundleConfigData)
        : undefined,
      browserName: isSet(object.browserName) ? globalThis.String(object.browserName) : undefined,
      browserVersion: isSet(object.browserVersion) ? globalThis.String(object.browserVersion) : undefined,
      locationPlayabilityToken: isSet(object.locationPlayabilityToken)
        ? globalThis.String(object.locationPlayabilityToken)
        : undefined,
      chipset: isSet(object.chipset) ? globalThis.String(object.chipset) : undefined,
      firmwareVersion: isSet(object.firmwareVersion) ? globalThis.String(object.firmwareVersion) : undefined,
      memoryTotalKbytes: isSet(object.memoryTotalKbytes) ? globalThis.Number(object.memoryTotalKbytes) : undefined,
      mainAppWebInfo: isSet(object.mainAppWebInfo)
        ? ClientInfo_MainAppWebInfo.fromJSON(object.mainAppWebInfo)
        : undefined,
      notificationPermissionInfo: isSet(object.notificationPermissionInfo)
        ? ClientInfo_NotificationPermissionInfo.fromJSON(object.notificationPermissionInfo)
        : undefined,
      deviceBrand: isSet(object.deviceBrand) ? globalThis.String(object.deviceBrand) : undefined,
      glDeviceInfo: isSet(object.glDeviceInfo) ? ClientInfo_GLDeviceInfo.fromJSON(object.glDeviceInfo) : undefined,
    };
  },

  toJSON(message: ClientInfo): unknown {
    const obj: any = {};
    if (message.hl !== undefined) {
      obj.hl = message.hl;
    }
    if (message.gl !== undefined) {
      obj.gl = message.gl;
    }
    if (message.remoteHost !== undefined) {
      obj.remoteHost = message.remoteHost;
    }
    if (message.deviceId !== undefined) {
      obj.deviceId = message.deviceId;
    }
    if (message.debugDeviceIdOverride !== undefined) {
      obj.debugDeviceIdOverride = message.debugDeviceIdOverride;
    }
    if (message.carrierGeo !== undefined) {
      obj.carrierGeo = message.carrierGeo;
    }
    if (message.crackedHl !== undefined) {
      obj.crackedHl = message.crackedHl;
    }
    if (message.deviceMake !== undefined) {
      obj.deviceMake = message.deviceMake;
    }
    if (message.deviceModel !== undefined) {
      obj.deviceModel = message.deviceModel;
    }
    if (message.visitorData !== undefined) {
      obj.visitorData = message.visitorData;
    }
    if (message.userAgent !== undefined) {
      obj.userAgent = message.userAgent;
    }
    if (message.clientName !== undefined) {
      obj.clientName = Math.round(message.clientName);
    }
    if (message.clientVersion !== undefined) {
      obj.clientVersion = message.clientVersion;
    }
    if (message.osName !== undefined) {
      obj.osName = message.osName;
    }
    if (message.osVersion !== undefined) {
      obj.osVersion = message.osVersion;
    }
    if (message.projectId !== undefined) {
      obj.projectId = message.projectId;
    }
    if (message.acceptLanguage !== undefined) {
      obj.acceptLanguage = message.acceptLanguage;
    }
    if (message.acceptRegion !== undefined) {
      obj.acceptRegion = message.acceptRegion;
    }
    if (message.originalUrl !== undefined) {
      obj.originalUrl = message.originalUrl;
    }
    if (message.rawDeviceId !== undefined) {
      obj.rawDeviceId = message.rawDeviceId;
    }
    if (message.configData !== undefined) {
      obj.configData = message.configData;
    }
    if (message.spacecastToken !== undefined) {
      obj.spacecastToken = message.spacecastToken;
    }
    if (message.internalGeo !== undefined) {
      obj.internalGeo = message.internalGeo;
    }
    if (message.screenWidthPoints !== undefined) {
      obj.screenWidthPoints = Math.round(message.screenWidthPoints);
    }
    if (message.screenHeightPoints !== undefined) {
      obj.screenHeightPoints = Math.round(message.screenHeightPoints);
    }
    if (message.screenWidthInches !== undefined) {
      obj.screenWidthInches = message.screenWidthInches;
    }
    if (message.screenHeightInches !== undefined) {
      obj.screenHeightInches = message.screenHeightInches;
    }
    if (message.screenPixelDensity !== undefined) {
      obj.screenPixelDensity = Math.round(message.screenPixelDensity);
    }
    if (message.platform !== undefined) {
      obj.platform = Math.round(message.platform);
    }
    if (message.spacecastClientInfo !== undefined) {
      obj.spacecastClientInfo = ClientInfo_SpacecastClientInfo.toJSON(message.spacecastClientInfo);
    }
    if (message.clientFormFactor !== undefined) {
      obj.clientFormFactor = clientInfo_ClientFormFactorToJSON(message.clientFormFactor);
    }
    if (message.forwardedFor !== undefined) {
      obj.forwardedFor = message.forwardedFor;
    }
    if (message.mobileDataPlanInfo !== undefined) {
      obj.mobileDataPlanInfo = ClientInfo_MobileDataPlanInfo.toJSON(message.mobileDataPlanInfo);
    }
    if (message.gmscoreVersionCode !== undefined) {
      obj.gmscoreVersionCode = Math.round(message.gmscoreVersionCode);
    }
    if (message.webpSupport !== undefined) {
      obj.webpSupport = message.webpSupport;
    }
    if (message.cameraType !== undefined) {
      obj.cameraType = clientInfo_CameraTypeToJSON(message.cameraType);
    }
    if (message.experimentsToken !== undefined) {
      obj.experimentsToken = message.experimentsToken;
    }
    if (message.windowWidthPoints !== undefined) {
      obj.windowWidthPoints = Math.round(message.windowWidthPoints);
    }
    if (message.windowHeightPoints !== undefined) {
      obj.windowHeightPoints = Math.round(message.windowHeightPoints);
    }
    if (message.configInfo !== undefined) {
      obj.configInfo = ClientInfo_ConfigGroupsClientInfo.toJSON(message.configInfo);
    }
    if (message.unpluggedLocationInfo !== undefined) {
      obj.unpluggedLocationInfo = ClientInfo_UnpluggedLocationInfo.toJSON(message.unpluggedLocationInfo);
    }
    if (message.androidSdkVersion !== undefined) {
      obj.androidSdkVersion = Math.round(message.androidSdkVersion);
    }
    if (message.screenDensityFloat !== undefined) {
      obj.screenDensityFloat = message.screenDensityFloat;
    }
    if (message.firstTimeSignInExperimentIds !== undefined) {
      obj.firstTimeSignInExperimentIds = Math.round(message.firstTimeSignInExperimentIds);
    }
    if (message.utcOffsetMinutes !== undefined) {
      obj.utcOffsetMinutes = Math.round(message.utcOffsetMinutes);
    }
    if (message.animatedWebpSupport !== undefined) {
      obj.animatedWebpSupport = message.animatedWebpSupport;
    }
    if (message.kidsAppInfo !== undefined) {
      obj.kidsAppInfo = ClientInfo_KidsAppInfo.toJSON(message.kidsAppInfo);
    }
    if (message.musicAppInfo !== undefined) {
      obj.musicAppInfo = ClientInfo_MusicAppInfo.toJSON(message.musicAppInfo);
    }
    if (message.tvAppInfo !== undefined) {
      obj.tvAppInfo = ClientInfo_TvAppInfo.toJSON(message.tvAppInfo);
    }
    if (message.internalGeoIp !== undefined) {
      obj.internalGeoIp = message.internalGeoIp;
    }
    if (message.unpluggedAppInfo !== undefined) {
      obj.unpluggedAppInfo = ClientInfo_UnpluggedAppInfo.toJSON(message.unpluggedAppInfo);
    }
    if (message.locationInfo !== undefined) {
      obj.locationInfo = ClientInfo_LocationInfo.toJSON(message.locationInfo);
    }
    if (message.contentSizeCategory !== undefined) {
      obj.contentSizeCategory = message.contentSizeCategory;
    }
    if (message.fontScale !== undefined) {
      obj.fontScale = message.fontScale;
    }
    if (message.userInterfaceTheme !== undefined) {
      obj.userInterfaceTheme = clientInfo_UserInterfaceThemeToJSON(message.userInterfaceTheme);
    }
    if (message.timeZone !== undefined) {
      obj.timeZone = message.timeZone;
    }
    if (message.homeGroupInfo !== undefined) {
      obj.homeGroupInfo = ClientInfo_HomeGroupInfo.toJSON(message.homeGroupInfo);
    }
    if (message.emlTemplateContext !== undefined) {
      obj.emlTemplateContext = base64FromBytes(message.emlTemplateContext);
    }
    if (message.coldAppBundleConfigData !== undefined) {
      obj.coldAppBundleConfigData = base64FromBytes(message.coldAppBundleConfigData);
    }
    if (message.browserName !== undefined) {
      obj.browserName = message.browserName;
    }
    if (message.browserVersion !== undefined) {
      obj.browserVersion = message.browserVersion;
    }
    if (message.locationPlayabilityToken !== undefined) {
      obj.locationPlayabilityToken = message.locationPlayabilityToken;
    }
    if (message.chipset !== undefined) {
      obj.chipset = message.chipset;
    }
    if (message.firmwareVersion !== undefined) {
      obj.firmwareVersion = message.firmwareVersion;
    }
    if (message.memoryTotalKbytes !== undefined) {
      obj.memoryTotalKbytes = Math.round(message.memoryTotalKbytes);
    }
    if (message.mainAppWebInfo !== undefined) {
      obj.mainAppWebInfo = ClientInfo_MainAppWebInfo.toJSON(message.mainAppWebInfo);
    }
    if (message.notificationPermissionInfo !== undefined) {
      obj.notificationPermissionInfo = ClientInfo_NotificationPermissionInfo.toJSON(message.notificationPermissionInfo);
    }
    if (message.deviceBrand !== undefined) {
      obj.deviceBrand = message.deviceBrand;
    }
    if (message.glDeviceInfo !== undefined) {
      obj.glDeviceInfo = ClientInfo_GLDeviceInfo.toJSON(message.glDeviceInfo);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo>, I>>(base?: I): ClientInfo {
    return ClientInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo>, I>>(object: I): ClientInfo {
    const message = createBaseClientInfo();
    message.hl = object.hl ?? undefined;
    message.gl = object.gl ?? undefined;
    message.remoteHost = object.remoteHost ?? undefined;
    message.deviceId = object.deviceId ?? undefined;
    message.debugDeviceIdOverride = object.debugDeviceIdOverride ?? undefined;
    message.carrierGeo = object.carrierGeo ?? undefined;
    message.crackedHl = object.crackedHl ?? undefined;
    message.deviceMake = object.deviceMake ?? undefined;
    message.deviceModel = object.deviceModel ?? undefined;
    message.visitorData = object.visitorData ?? undefined;
    message.userAgent = object.userAgent ?? undefined;
    message.clientName = object.clientName ?? undefined;
    message.clientVersion = object.clientVersion ?? undefined;
    message.osName = object.osName ?? undefined;
    message.osVersion = object.osVersion ?? undefined;
    message.projectId = object.projectId ?? undefined;
    message.acceptLanguage = object.acceptLanguage ?? undefined;
    message.acceptRegion = object.acceptRegion ?? undefined;
    message.originalUrl = object.originalUrl ?? undefined;
    message.rawDeviceId = object.rawDeviceId ?? undefined;
    message.configData = object.configData ?? undefined;
    message.spacecastToken = object.spacecastToken ?? undefined;
    message.internalGeo = object.internalGeo ?? undefined;
    message.screenWidthPoints = object.screenWidthPoints ?? undefined;
    message.screenHeightPoints = object.screenHeightPoints ?? undefined;
    message.screenWidthInches = object.screenWidthInches ?? undefined;
    message.screenHeightInches = object.screenHeightInches ?? undefined;
    message.screenPixelDensity = object.screenPixelDensity ?? undefined;
    message.platform = object.platform ?? undefined;
    message.spacecastClientInfo = (object.spacecastClientInfo !== undefined && object.spacecastClientInfo !== null)
      ? ClientInfo_SpacecastClientInfo.fromPartial(object.spacecastClientInfo)
      : undefined;
    message.clientFormFactor = object.clientFormFactor ?? undefined;
    message.forwardedFor = object.forwardedFor ?? undefined;
    message.mobileDataPlanInfo = (object.mobileDataPlanInfo !== undefined && object.mobileDataPlanInfo !== null)
      ? ClientInfo_MobileDataPlanInfo.fromPartial(object.mobileDataPlanInfo)
      : undefined;
    message.gmscoreVersionCode = object.gmscoreVersionCode ?? undefined;
    message.webpSupport = object.webpSupport ?? undefined;
    message.cameraType = object.cameraType ?? undefined;
    message.experimentsToken = object.experimentsToken ?? undefined;
    message.windowWidthPoints = object.windowWidthPoints ?? undefined;
    message.windowHeightPoints = object.windowHeightPoints ?? undefined;
    message.configInfo = (object.configInfo !== undefined && object.configInfo !== null)
      ? ClientInfo_ConfigGroupsClientInfo.fromPartial(object.configInfo)
      : undefined;
    message.unpluggedLocationInfo =
      (object.unpluggedLocationInfo !== undefined && object.unpluggedLocationInfo !== null)
        ? ClientInfo_UnpluggedLocationInfo.fromPartial(object.unpluggedLocationInfo)
        : undefined;
    message.androidSdkVersion = object.androidSdkVersion ?? undefined;
    message.screenDensityFloat = object.screenDensityFloat ?? undefined;
    message.firstTimeSignInExperimentIds = object.firstTimeSignInExperimentIds ?? undefined;
    message.utcOffsetMinutes = object.utcOffsetMinutes ?? undefined;
    message.animatedWebpSupport = object.animatedWebpSupport ?? undefined;
    message.kidsAppInfo = (object.kidsAppInfo !== undefined && object.kidsAppInfo !== null)
      ? ClientInfo_KidsAppInfo.fromPartial(object.kidsAppInfo)
      : undefined;
    message.musicAppInfo = (object.musicAppInfo !== undefined && object.musicAppInfo !== null)
      ? ClientInfo_MusicAppInfo.fromPartial(object.musicAppInfo)
      : undefined;
    message.tvAppInfo = (object.tvAppInfo !== undefined && object.tvAppInfo !== null)
      ? ClientInfo_TvAppInfo.fromPartial(object.tvAppInfo)
      : undefined;
    message.internalGeoIp = object.internalGeoIp ?? undefined;
    message.unpluggedAppInfo = (object.unpluggedAppInfo !== undefined && object.unpluggedAppInfo !== null)
      ? ClientInfo_UnpluggedAppInfo.fromPartial(object.unpluggedAppInfo)
      : undefined;
    message.locationInfo = (object.locationInfo !== undefined && object.locationInfo !== null)
      ? ClientInfo_LocationInfo.fromPartial(object.locationInfo)
      : undefined;
    message.contentSizeCategory = object.contentSizeCategory ?? undefined;
    message.fontScale = object.fontScale ?? undefined;
    message.userInterfaceTheme = object.userInterfaceTheme ?? undefined;
    message.timeZone = object.timeZone ?? undefined;
    message.homeGroupInfo = (object.homeGroupInfo !== undefined && object.homeGroupInfo !== null)
      ? ClientInfo_HomeGroupInfo.fromPartial(object.homeGroupInfo)
      : undefined;
    message.emlTemplateContext = object.emlTemplateContext ?? undefined;
    message.coldAppBundleConfigData = object.coldAppBundleConfigData ?? undefined;
    message.browserName = object.browserName ?? undefined;
    message.browserVersion = object.browserVersion ?? undefined;
    message.locationPlayabilityToken = object.locationPlayabilityToken ?? undefined;
    message.chipset = object.chipset ?? undefined;
    message.firmwareVersion = object.firmwareVersion ?? undefined;
    message.memoryTotalKbytes = object.memoryTotalKbytes ?? undefined;
    message.mainAppWebInfo = (object.mainAppWebInfo !== undefined && object.mainAppWebInfo !== null)
      ? ClientInfo_MainAppWebInfo.fromPartial(object.mainAppWebInfo)
      : undefined;
    message.notificationPermissionInfo =
      (object.notificationPermissionInfo !== undefined && object.notificationPermissionInfo !== null)
        ? ClientInfo_NotificationPermissionInfo.fromPartial(object.notificationPermissionInfo)
        : undefined;
    message.deviceBrand = object.deviceBrand ?? undefined;
    message.glDeviceInfo = (object.glDeviceInfo !== undefined && object.glDeviceInfo !== null)
      ? ClientInfo_GLDeviceInfo.fromPartial(object.glDeviceInfo)
      : undefined;
    return message;
  },
};

function createBaseClientInfo_MainAppWebInfo(): ClientInfo_MainAppWebInfo {
  return {
    graftUrl: undefined,
    pwaInstallabilityStatus: undefined,
    webDisplayMode: undefined,
    isWebNativeShareAvailable: undefined,
    storeDigitalGoodsApiSupportStatus: undefined,
  };
}

export const ClientInfo_MainAppWebInfo: MessageFns<ClientInfo_MainAppWebInfo> = {
  encode(message: ClientInfo_MainAppWebInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.graftUrl !== undefined) {
      writer.uint32(10).string(message.graftUrl);
    }
    if (message.pwaInstallabilityStatus !== undefined) {
      writer.uint32(16).int32(message.pwaInstallabilityStatus);
    }
    if (message.webDisplayMode !== undefined) {
      writer.uint32(24).int32(message.webDisplayMode);
    }
    if (message.isWebNativeShareAvailable !== undefined) {
      writer.uint32(32).bool(message.isWebNativeShareAvailable);
    }
    if (message.storeDigitalGoodsApiSupportStatus !== undefined) {
      writer.uint32(40).int32(message.storeDigitalGoodsApiSupportStatus);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_MainAppWebInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_MainAppWebInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.graftUrl = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.pwaInstallabilityStatus = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.webDisplayMode = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.isWebNativeShareAvailable = reader.bool();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.storeDigitalGoodsApiSupportStatus = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_MainAppWebInfo {
    return {
      graftUrl: isSet(object.graftUrl) ? globalThis.String(object.graftUrl) : undefined,
      pwaInstallabilityStatus: isSet(object.pwaInstallabilityStatus)
        ? clientInfo_MainAppWebInfo_PwaInstallabilityStatusFromJSON(object.pwaInstallabilityStatus)
        : undefined,
      webDisplayMode: isSet(object.webDisplayMode)
        ? clientInfo_MainAppWebInfo_WebDisplayModeFromJSON(object.webDisplayMode)
        : undefined,
      isWebNativeShareAvailable: isSet(object.isWebNativeShareAvailable)
        ? globalThis.Boolean(object.isWebNativeShareAvailable)
        : undefined,
      storeDigitalGoodsApiSupportStatus: isSet(object.storeDigitalGoodsApiSupportStatus)
        ? clientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatusFromJSON(object.storeDigitalGoodsApiSupportStatus)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_MainAppWebInfo): unknown {
    const obj: any = {};
    if (message.graftUrl !== undefined) {
      obj.graftUrl = message.graftUrl;
    }
    if (message.pwaInstallabilityStatus !== undefined) {
      obj.pwaInstallabilityStatus = clientInfo_MainAppWebInfo_PwaInstallabilityStatusToJSON(
        message.pwaInstallabilityStatus,
      );
    }
    if (message.webDisplayMode !== undefined) {
      obj.webDisplayMode = clientInfo_MainAppWebInfo_WebDisplayModeToJSON(message.webDisplayMode);
    }
    if (message.isWebNativeShareAvailable !== undefined) {
      obj.isWebNativeShareAvailable = message.isWebNativeShareAvailable;
    }
    if (message.storeDigitalGoodsApiSupportStatus !== undefined) {
      obj.storeDigitalGoodsApiSupportStatus = clientInfo_MainAppWebInfo_StoreDigitalGoodsApiSupportStatusToJSON(
        message.storeDigitalGoodsApiSupportStatus,
      );
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_MainAppWebInfo>, I>>(base?: I): ClientInfo_MainAppWebInfo {
    return ClientInfo_MainAppWebInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_MainAppWebInfo>, I>>(object: I): ClientInfo_MainAppWebInfo {
    const message = createBaseClientInfo_MainAppWebInfo();
    message.graftUrl = object.graftUrl ?? undefined;
    message.pwaInstallabilityStatus = object.pwaInstallabilityStatus ?? undefined;
    message.webDisplayMode = object.webDisplayMode ?? undefined;
    message.isWebNativeShareAvailable = object.isWebNativeShareAvailable ?? undefined;
    message.storeDigitalGoodsApiSupportStatus = object.storeDigitalGoodsApiSupportStatus ?? undefined;
    return message;
  },
};

function createBaseClientInfo_NotificationPermissionInfo(): ClientInfo_NotificationPermissionInfo {
  return { notificationsSetting: undefined, lastDeviceOptInChangeTimeAgoSec: undefined };
}

export const ClientInfo_NotificationPermissionInfo: MessageFns<ClientInfo_NotificationPermissionInfo> = {
  encode(message: ClientInfo_NotificationPermissionInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.notificationsSetting !== undefined) {
      writer.uint32(8).int32(message.notificationsSetting);
    }
    if (message.lastDeviceOptInChangeTimeAgoSec !== undefined) {
      writer.uint32(16).int64(message.lastDeviceOptInChangeTimeAgoSec);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_NotificationPermissionInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_NotificationPermissionInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.notificationsSetting = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.lastDeviceOptInChangeTimeAgoSec = longToNumber(reader.int64());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_NotificationPermissionInfo {
    return {
      notificationsSetting: isSet(object.notificationsSetting)
        ? clientInfo_NotificationPermissionInfo_NotificationsSettingFromJSON(object.notificationsSetting)
        : undefined,
      lastDeviceOptInChangeTimeAgoSec: isSet(object.lastDeviceOptInChangeTimeAgoSec)
        ? globalThis.Number(object.lastDeviceOptInChangeTimeAgoSec)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_NotificationPermissionInfo): unknown {
    const obj: any = {};
    if (message.notificationsSetting !== undefined) {
      obj.notificationsSetting = clientInfo_NotificationPermissionInfo_NotificationsSettingToJSON(
        message.notificationsSetting,
      );
    }
    if (message.lastDeviceOptInChangeTimeAgoSec !== undefined) {
      obj.lastDeviceOptInChangeTimeAgoSec = Math.round(message.lastDeviceOptInChangeTimeAgoSec);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_NotificationPermissionInfo>, I>>(
    base?: I,
  ): ClientInfo_NotificationPermissionInfo {
    return ClientInfo_NotificationPermissionInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_NotificationPermissionInfo>, I>>(
    object: I,
  ): ClientInfo_NotificationPermissionInfo {
    const message = createBaseClientInfo_NotificationPermissionInfo();
    message.notificationsSetting = object.notificationsSetting ?? undefined;
    message.lastDeviceOptInChangeTimeAgoSec = object.lastDeviceOptInChangeTimeAgoSec ?? undefined;
    return message;
  },
};

function createBaseClientInfo_GLDeviceInfo(): ClientInfo_GLDeviceInfo {
  return { glRenderer: undefined, glEsVersionMajor: undefined, glEsVersionMinor: undefined };
}

export const ClientInfo_GLDeviceInfo: MessageFns<ClientInfo_GLDeviceInfo> = {
  encode(message: ClientInfo_GLDeviceInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.glRenderer !== undefined) {
      writer.uint32(10).string(message.glRenderer);
    }
    if (message.glEsVersionMajor !== undefined) {
      writer.uint32(16).int32(message.glEsVersionMajor);
    }
    if (message.glEsVersionMinor !== undefined) {
      writer.uint32(24).int32(message.glEsVersionMinor);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_GLDeviceInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_GLDeviceInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.glRenderer = reader.string();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.glEsVersionMajor = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.glEsVersionMinor = reader.int32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_GLDeviceInfo {
    return {
      glRenderer: isSet(object.glRenderer) ? globalThis.String(object.glRenderer) : undefined,
      glEsVersionMajor: isSet(object.glEsVersionMajor) ? globalThis.Number(object.glEsVersionMajor) : undefined,
      glEsVersionMinor: isSet(object.glEsVersionMinor) ? globalThis.Number(object.glEsVersionMinor) : undefined,
    };
  },

  toJSON(message: ClientInfo_GLDeviceInfo): unknown {
    const obj: any = {};
    if (message.glRenderer !== undefined) {
      obj.glRenderer = message.glRenderer;
    }
    if (message.glEsVersionMajor !== undefined) {
      obj.glEsVersionMajor = Math.round(message.glEsVersionMajor);
    }
    if (message.glEsVersionMinor !== undefined) {
      obj.glEsVersionMinor = Math.round(message.glEsVersionMinor);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_GLDeviceInfo>, I>>(base?: I): ClientInfo_GLDeviceInfo {
    return ClientInfo_GLDeviceInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_GLDeviceInfo>, I>>(object: I): ClientInfo_GLDeviceInfo {
    const message = createBaseClientInfo_GLDeviceInfo();
    message.glRenderer = object.glRenderer ?? undefined;
    message.glEsVersionMajor = object.glEsVersionMajor ?? undefined;
    message.glEsVersionMinor = object.glEsVersionMinor ?? undefined;
    return message;
  },
};

function createBaseClientInfo_SpacecastClientInfo(): ClientInfo_SpacecastClientInfo {
  return { appliances: undefined, interactionLevel: undefined };
}

export const ClientInfo_SpacecastClientInfo: MessageFns<ClientInfo_SpacecastClientInfo> = {
  encode(message: ClientInfo_SpacecastClientInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.appliances !== undefined) {
      ClientInfo_SpacecastClientInfo_SpacecastAppliance.encode(message.appliances, writer.uint32(10).fork()).join();
    }
    if (message.interactionLevel !== undefined) {
      writer.uint32(16).int32(message.interactionLevel);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_SpacecastClientInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_SpacecastClientInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.appliances = ClientInfo_SpacecastClientInfo_SpacecastAppliance.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.interactionLevel = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_SpacecastClientInfo {
    return {
      appliances: isSet(object.appliances)
        ? ClientInfo_SpacecastClientInfo_SpacecastAppliance.fromJSON(object.appliances)
        : undefined,
      interactionLevel: isSet(object.interactionLevel)
        ? clientInfo_SpacecastClientInfo_SpacecastInteractionLevelFromJSON(object.interactionLevel)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_SpacecastClientInfo): unknown {
    const obj: any = {};
    if (message.appliances !== undefined) {
      obj.appliances = ClientInfo_SpacecastClientInfo_SpacecastAppliance.toJSON(message.appliances);
    }
    if (message.interactionLevel !== undefined) {
      obj.interactionLevel = clientInfo_SpacecastClientInfo_SpacecastInteractionLevelToJSON(message.interactionLevel);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_SpacecastClientInfo>, I>>(base?: I): ClientInfo_SpacecastClientInfo {
    return ClientInfo_SpacecastClientInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_SpacecastClientInfo>, I>>(
    object: I,
  ): ClientInfo_SpacecastClientInfo {
    const message = createBaseClientInfo_SpacecastClientInfo();
    message.appliances = (object.appliances !== undefined && object.appliances !== null)
      ? ClientInfo_SpacecastClientInfo_SpacecastAppliance.fromPartial(object.appliances)
      : undefined;
    message.interactionLevel = object.interactionLevel ?? undefined;
    return message;
  },
};

function createBaseClientInfo_SpacecastClientInfo_SpacecastAppliance(): ClientInfo_SpacecastClientInfo_SpacecastAppliance {
  return {
    contentProfileToken: undefined,
    status: undefined,
    hostname: undefined,
    active: undefined,
    deviceId: undefined,
  };
}

export const ClientInfo_SpacecastClientInfo_SpacecastAppliance: MessageFns<
  ClientInfo_SpacecastClientInfo_SpacecastAppliance
> = {
  encode(
    message: ClientInfo_SpacecastClientInfo_SpacecastAppliance,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.contentProfileToken !== undefined) {
      writer.uint32(10).bytes(message.contentProfileToken);
    }
    if (message.status !== undefined) {
      writer.uint32(16).int32(message.status);
    }
    if (message.hostname !== undefined) {
      writer.uint32(26).string(message.hostname);
    }
    if (message.active !== undefined) {
      writer.uint32(32).bool(message.active);
    }
    if (message.deviceId !== undefined) {
      writer.uint32(42).string(message.deviceId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_SpacecastClientInfo_SpacecastAppliance {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_SpacecastClientInfo_SpacecastAppliance();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.contentProfileToken = reader.bytes();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.status = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.hostname = reader.string();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.active = reader.bool();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.deviceId = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_SpacecastClientInfo_SpacecastAppliance {
    return {
      contentProfileToken: isSet(object.contentProfileToken) ? bytesFromBase64(object.contentProfileToken) : undefined,
      status: isSet(object.status)
        ? clientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatusFromJSON(object.status)
        : undefined,
      hostname: isSet(object.hostname) ? globalThis.String(object.hostname) : undefined,
      active: isSet(object.active) ? globalThis.Boolean(object.active) : undefined,
      deviceId: isSet(object.deviceId) ? globalThis.String(object.deviceId) : undefined,
    };
  },

  toJSON(message: ClientInfo_SpacecastClientInfo_SpacecastAppliance): unknown {
    const obj: any = {};
    if (message.contentProfileToken !== undefined) {
      obj.contentProfileToken = base64FromBytes(message.contentProfileToken);
    }
    if (message.status !== undefined) {
      obj.status = clientInfo_SpacecastClientInfo_SpacecastAppliance_OperationalStatusToJSON(message.status);
    }
    if (message.hostname !== undefined) {
      obj.hostname = message.hostname;
    }
    if (message.active !== undefined) {
      obj.active = message.active;
    }
    if (message.deviceId !== undefined) {
      obj.deviceId = message.deviceId;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_SpacecastClientInfo_SpacecastAppliance>, I>>(
    base?: I,
  ): ClientInfo_SpacecastClientInfo_SpacecastAppliance {
    return ClientInfo_SpacecastClientInfo_SpacecastAppliance.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_SpacecastClientInfo_SpacecastAppliance>, I>>(
    object: I,
  ): ClientInfo_SpacecastClientInfo_SpacecastAppliance {
    const message = createBaseClientInfo_SpacecastClientInfo_SpacecastAppliance();
    message.contentProfileToken = object.contentProfileToken ?? undefined;
    message.status = object.status ?? undefined;
    message.hostname = object.hostname ?? undefined;
    message.active = object.active ?? undefined;
    message.deviceId = object.deviceId ?? undefined;
    return message;
  },
};

function createBaseClientInfo_MobileDataPlanInfo(): ClientInfo_MobileDataPlanInfo {
  return {
    cpid: undefined,
    serializedDataPlanStatus: undefined,
    dataSavingQualityPickerEnabled: undefined,
    mccmnc: undefined,
  };
}

export const ClientInfo_MobileDataPlanInfo: MessageFns<ClientInfo_MobileDataPlanInfo> = {
  encode(message: ClientInfo_MobileDataPlanInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.cpid !== undefined) {
      writer.uint32(394).string(message.cpid);
    }
    if (message.serializedDataPlanStatus !== undefined) {
      writer.uint32(402).string(message.serializedDataPlanStatus);
    }
    if (message.dataSavingQualityPickerEnabled !== undefined) {
      writer.uint32(416).bool(message.dataSavingQualityPickerEnabled);
    }
    if (message.mccmnc !== undefined) {
      writer.uint32(426).string(message.mccmnc);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_MobileDataPlanInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_MobileDataPlanInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 49:
          if (tag !== 394) {
            break;
          }

          message.cpid = reader.string();
          continue;
        case 50:
          if (tag !== 402) {
            break;
          }

          message.serializedDataPlanStatus = reader.string();
          continue;
        case 52:
          if (tag !== 416) {
            break;
          }

          message.dataSavingQualityPickerEnabled = reader.bool();
          continue;
        case 53:
          if (tag !== 426) {
            break;
          }

          message.mccmnc = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_MobileDataPlanInfo {
    return {
      cpid: isSet(object.cpid) ? globalThis.String(object.cpid) : undefined,
      serializedDataPlanStatus: isSet(object.serializedDataPlanStatus)
        ? globalThis.String(object.serializedDataPlanStatus)
        : undefined,
      dataSavingQualityPickerEnabled: isSet(object.dataSavingQualityPickerEnabled)
        ? globalThis.Boolean(object.dataSavingQualityPickerEnabled)
        : undefined,
      mccmnc: isSet(object.mccmnc) ? globalThis.String(object.mccmnc) : undefined,
    };
  },

  toJSON(message: ClientInfo_MobileDataPlanInfo): unknown {
    const obj: any = {};
    if (message.cpid !== undefined) {
      obj.cpid = message.cpid;
    }
    if (message.serializedDataPlanStatus !== undefined) {
      obj.serializedDataPlanStatus = message.serializedDataPlanStatus;
    }
    if (message.dataSavingQualityPickerEnabled !== undefined) {
      obj.dataSavingQualityPickerEnabled = message.dataSavingQualityPickerEnabled;
    }
    if (message.mccmnc !== undefined) {
      obj.mccmnc = message.mccmnc;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_MobileDataPlanInfo>, I>>(base?: I): ClientInfo_MobileDataPlanInfo {
    return ClientInfo_MobileDataPlanInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_MobileDataPlanInfo>, I>>(
    object: I,
  ): ClientInfo_MobileDataPlanInfo {
    const message = createBaseClientInfo_MobileDataPlanInfo();
    message.cpid = object.cpid ?? undefined;
    message.serializedDataPlanStatus = object.serializedDataPlanStatus ?? undefined;
    message.dataSavingQualityPickerEnabled = object.dataSavingQualityPickerEnabled ?? undefined;
    message.mccmnc = object.mccmnc ?? undefined;
    return message;
  },
};

function createBaseClientInfo_ConfigGroupsClientInfo(): ClientInfo_ConfigGroupsClientInfo {
  return { coldConfigData: undefined, coldHashData: undefined, hotHashData: undefined, appInstallData: undefined };
}

export const ClientInfo_ConfigGroupsClientInfo: MessageFns<ClientInfo_ConfigGroupsClientInfo> = {
  encode(message: ClientInfo_ConfigGroupsClientInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.coldConfigData !== undefined) {
      writer.uint32(10).string(message.coldConfigData);
    }
    if (message.coldHashData !== undefined) {
      writer.uint32(26).string(message.coldHashData);
    }
    if (message.hotHashData !== undefined) {
      writer.uint32(42).string(message.hotHashData);
    }
    if (message.appInstallData !== undefined) {
      writer.uint32(50).string(message.appInstallData);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_ConfigGroupsClientInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_ConfigGroupsClientInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.coldConfigData = reader.string();
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.coldHashData = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.hotHashData = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.appInstallData = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_ConfigGroupsClientInfo {
    return {
      coldConfigData: isSet(object.coldConfigData) ? globalThis.String(object.coldConfigData) : undefined,
      coldHashData: isSet(object.coldHashData) ? globalThis.String(object.coldHashData) : undefined,
      hotHashData: isSet(object.hotHashData) ? globalThis.String(object.hotHashData) : undefined,
      appInstallData: isSet(object.appInstallData) ? globalThis.String(object.appInstallData) : undefined,
    };
  },

  toJSON(message: ClientInfo_ConfigGroupsClientInfo): unknown {
    const obj: any = {};
    if (message.coldConfigData !== undefined) {
      obj.coldConfigData = message.coldConfigData;
    }
    if (message.coldHashData !== undefined) {
      obj.coldHashData = message.coldHashData;
    }
    if (message.hotHashData !== undefined) {
      obj.hotHashData = message.hotHashData;
    }
    if (message.appInstallData !== undefined) {
      obj.appInstallData = message.appInstallData;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_ConfigGroupsClientInfo>, I>>(
    base?: I,
  ): ClientInfo_ConfigGroupsClientInfo {
    return ClientInfo_ConfigGroupsClientInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_ConfigGroupsClientInfo>, I>>(
    object: I,
  ): ClientInfo_ConfigGroupsClientInfo {
    const message = createBaseClientInfo_ConfigGroupsClientInfo();
    message.coldConfigData = object.coldConfigData ?? undefined;
    message.coldHashData = object.coldHashData ?? undefined;
    message.hotHashData = object.hotHashData ?? undefined;
    message.appInstallData = object.appInstallData ?? undefined;
    return message;
  },
};

function createBaseClientInfo_UnpluggedLocationInfo(): ClientInfo_UnpluggedLocationInfo {
  return {
    latitudeE7: undefined,
    longitudeE7: undefined,
    localTimestampMs: undefined,
    ipAddress: undefined,
    timezone: undefined,
    prefer24HourTime: undefined,
    locationRadiusMeters: undefined,
    isInitialLoad: undefined,
    browserPermissionGranted: undefined,
    clientPermissionState: undefined,
    locationOverrideToken: undefined,
  };
}

export const ClientInfo_UnpluggedLocationInfo: MessageFns<ClientInfo_UnpluggedLocationInfo> = {
  encode(message: ClientInfo_UnpluggedLocationInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.latitudeE7 !== undefined) {
      writer.uint32(8).int32(message.latitudeE7);
    }
    if (message.longitudeE7 !== undefined) {
      writer.uint32(16).int32(message.longitudeE7);
    }
    if (message.localTimestampMs !== undefined) {
      writer.uint32(24).int64(message.localTimestampMs);
    }
    if (message.ipAddress !== undefined) {
      writer.uint32(34).string(message.ipAddress);
    }
    if (message.timezone !== undefined) {
      writer.uint32(42).string(message.timezone);
    }
    if (message.prefer24HourTime !== undefined) {
      writer.uint32(48).bool(message.prefer24HourTime);
    }
    if (message.locationRadiusMeters !== undefined) {
      writer.uint32(56).int32(message.locationRadiusMeters);
    }
    if (message.isInitialLoad !== undefined) {
      writer.uint32(64).bool(message.isInitialLoad);
    }
    if (message.browserPermissionGranted !== undefined) {
      writer.uint32(72).bool(message.browserPermissionGranted);
    }
    if (message.clientPermissionState !== undefined) {
      writer.uint32(80).int32(message.clientPermissionState);
    }
    if (message.locationOverrideToken !== undefined) {
      writer.uint32(90).string(message.locationOverrideToken);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_UnpluggedLocationInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_UnpluggedLocationInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.latitudeE7 = reader.int32();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.longitudeE7 = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.localTimestampMs = longToNumber(reader.int64());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.ipAddress = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.timezone = reader.string();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.prefer24HourTime = reader.bool();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.locationRadiusMeters = reader.int32();
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.isInitialLoad = reader.bool();
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.browserPermissionGranted = reader.bool();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.clientPermissionState = reader.int32();
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.locationOverrideToken = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_UnpluggedLocationInfo {
    return {
      latitudeE7: isSet(object.latitudeE7) ? globalThis.Number(object.latitudeE7) : undefined,
      longitudeE7: isSet(object.longitudeE7) ? globalThis.Number(object.longitudeE7) : undefined,
      localTimestampMs: isSet(object.localTimestampMs) ? globalThis.Number(object.localTimestampMs) : undefined,
      ipAddress: isSet(object.ipAddress) ? globalThis.String(object.ipAddress) : undefined,
      timezone: isSet(object.timezone) ? globalThis.String(object.timezone) : undefined,
      prefer24HourTime: isSet(object.prefer24HourTime) ? globalThis.Boolean(object.prefer24HourTime) : undefined,
      locationRadiusMeters: isSet(object.locationRadiusMeters)
        ? globalThis.Number(object.locationRadiusMeters)
        : undefined,
      isInitialLoad: isSet(object.isInitialLoad) ? globalThis.Boolean(object.isInitialLoad) : undefined,
      browserPermissionGranted: isSet(object.browserPermissionGranted)
        ? globalThis.Boolean(object.browserPermissionGranted)
        : undefined,
      clientPermissionState: isSet(object.clientPermissionState)
        ? globalThis.Number(object.clientPermissionState)
        : undefined,
      locationOverrideToken: isSet(object.locationOverrideToken)
        ? globalThis.String(object.locationOverrideToken)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_UnpluggedLocationInfo): unknown {
    const obj: any = {};
    if (message.latitudeE7 !== undefined) {
      obj.latitudeE7 = Math.round(message.latitudeE7);
    }
    if (message.longitudeE7 !== undefined) {
      obj.longitudeE7 = Math.round(message.longitudeE7);
    }
    if (message.localTimestampMs !== undefined) {
      obj.localTimestampMs = Math.round(message.localTimestampMs);
    }
    if (message.ipAddress !== undefined) {
      obj.ipAddress = message.ipAddress;
    }
    if (message.timezone !== undefined) {
      obj.timezone = message.timezone;
    }
    if (message.prefer24HourTime !== undefined) {
      obj.prefer24HourTime = message.prefer24HourTime;
    }
    if (message.locationRadiusMeters !== undefined) {
      obj.locationRadiusMeters = Math.round(message.locationRadiusMeters);
    }
    if (message.isInitialLoad !== undefined) {
      obj.isInitialLoad = message.isInitialLoad;
    }
    if (message.browserPermissionGranted !== undefined) {
      obj.browserPermissionGranted = message.browserPermissionGranted;
    }
    if (message.clientPermissionState !== undefined) {
      obj.clientPermissionState = Math.round(message.clientPermissionState);
    }
    if (message.locationOverrideToken !== undefined) {
      obj.locationOverrideToken = message.locationOverrideToken;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_UnpluggedLocationInfo>, I>>(
    base?: I,
  ): ClientInfo_UnpluggedLocationInfo {
    return ClientInfo_UnpluggedLocationInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_UnpluggedLocationInfo>, I>>(
    object: I,
  ): ClientInfo_UnpluggedLocationInfo {
    const message = createBaseClientInfo_UnpluggedLocationInfo();
    message.latitudeE7 = object.latitudeE7 ?? undefined;
    message.longitudeE7 = object.longitudeE7 ?? undefined;
    message.localTimestampMs = object.localTimestampMs ?? undefined;
    message.ipAddress = object.ipAddress ?? undefined;
    message.timezone = object.timezone ?? undefined;
    message.prefer24HourTime = object.prefer24HourTime ?? undefined;
    message.locationRadiusMeters = object.locationRadiusMeters ?? undefined;
    message.isInitialLoad = object.isInitialLoad ?? undefined;
    message.browserPermissionGranted = object.browserPermissionGranted ?? undefined;
    message.clientPermissionState = object.clientPermissionState ?? undefined;
    message.locationOverrideToken = object.locationOverrideToken ?? undefined;
    return message;
  },
};

function createBaseClientInfo_KidsAppInfo(): ClientInfo_KidsAppInfo {
  return {
    contentSettings: undefined,
    parentCurationMode: undefined,
    categorySettings: undefined,
    userEducationSettings: undefined,
  };
}

export const ClientInfo_KidsAppInfo: MessageFns<ClientInfo_KidsAppInfo> = {
  encode(message: ClientInfo_KidsAppInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.contentSettings !== undefined) {
      ClientInfo_KidsAppInfo_KidsContentSettings.encode(message.contentSettings, writer.uint32(10).fork()).join();
    }
    if (message.parentCurationMode !== undefined) {
      writer.uint32(16).int32(message.parentCurationMode);
    }
    if (message.categorySettings !== undefined) {
      ClientInfo_KidsAppInfo_KidsCategorySettings.encode(message.categorySettings, writer.uint32(26).fork()).join();
    }
    if (message.userEducationSettings !== undefined) {
      ClientInfo_KidsAppInfo_KidsUserEducationSettings.encode(message.userEducationSettings, writer.uint32(34).fork())
        .join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_KidsAppInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_KidsAppInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.contentSettings = ClientInfo_KidsAppInfo_KidsContentSettings.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.parentCurationMode = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.categorySettings = ClientInfo_KidsAppInfo_KidsCategorySettings.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.userEducationSettings = ClientInfo_KidsAppInfo_KidsUserEducationSettings.decode(
            reader,
            reader.uint32(),
          );
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_KidsAppInfo {
    return {
      contentSettings: isSet(object.contentSettings)
        ? ClientInfo_KidsAppInfo_KidsContentSettings.fromJSON(object.contentSettings)
        : undefined,
      parentCurationMode: isSet(object.parentCurationMode)
        ? clientInfo_KidsAppInfo_KidsParentCurationModeFromJSON(object.parentCurationMode)
        : undefined,
      categorySettings: isSet(object.categorySettings)
        ? ClientInfo_KidsAppInfo_KidsCategorySettings.fromJSON(object.categorySettings)
        : undefined,
      userEducationSettings: isSet(object.userEducationSettings)
        ? ClientInfo_KidsAppInfo_KidsUserEducationSettings.fromJSON(object.userEducationSettings)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_KidsAppInfo): unknown {
    const obj: any = {};
    if (message.contentSettings !== undefined) {
      obj.contentSettings = ClientInfo_KidsAppInfo_KidsContentSettings.toJSON(message.contentSettings);
    }
    if (message.parentCurationMode !== undefined) {
      obj.parentCurationMode = clientInfo_KidsAppInfo_KidsParentCurationModeToJSON(message.parentCurationMode);
    }
    if (message.categorySettings !== undefined) {
      obj.categorySettings = ClientInfo_KidsAppInfo_KidsCategorySettings.toJSON(message.categorySettings);
    }
    if (message.userEducationSettings !== undefined) {
      obj.userEducationSettings = ClientInfo_KidsAppInfo_KidsUserEducationSettings.toJSON(
        message.userEducationSettings,
      );
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo>, I>>(base?: I): ClientInfo_KidsAppInfo {
    return ClientInfo_KidsAppInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo>, I>>(object: I): ClientInfo_KidsAppInfo {
    const message = createBaseClientInfo_KidsAppInfo();
    message.contentSettings = (object.contentSettings !== undefined && object.contentSettings !== null)
      ? ClientInfo_KidsAppInfo_KidsContentSettings.fromPartial(object.contentSettings)
      : undefined;
    message.parentCurationMode = object.parentCurationMode ?? undefined;
    message.categorySettings = (object.categorySettings !== undefined && object.categorySettings !== null)
      ? ClientInfo_KidsAppInfo_KidsCategorySettings.fromPartial(object.categorySettings)
      : undefined;
    message.userEducationSettings =
      (object.userEducationSettings !== undefined && object.userEducationSettings !== null)
        ? ClientInfo_KidsAppInfo_KidsUserEducationSettings.fromPartial(object.userEducationSettings)
        : undefined;
    return message;
  },
};

function createBaseClientInfo_KidsAppInfo_KidsContentSettings(): ClientInfo_KidsAppInfo_KidsContentSettings {
  return { kidsNoSearchMode: undefined, ageUpMode: undefined, contentDensity: undefined };
}

export const ClientInfo_KidsAppInfo_KidsContentSettings: MessageFns<ClientInfo_KidsAppInfo_KidsContentSettings> = {
  encode(message: ClientInfo_KidsAppInfo_KidsContentSettings, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.kidsNoSearchMode !== undefined) {
      writer.uint32(8).int32(message.kidsNoSearchMode);
    }
    if (message.ageUpMode !== undefined) {
      writer.uint32(16).int32(message.ageUpMode);
    }
    if (message.contentDensity !== undefined) {
      writer.uint32(24).int32(message.contentDensity);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_KidsAppInfo_KidsContentSettings {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_KidsAppInfo_KidsContentSettings();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.kidsNoSearchMode = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.ageUpMode = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.contentDensity = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_KidsAppInfo_KidsContentSettings {
    return {
      kidsNoSearchMode: isSet(object.kidsNoSearchMode)
        ? clientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchModeFromJSON(object.kidsNoSearchMode)
        : undefined,
      ageUpMode: isSet(object.ageUpMode)
        ? clientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpModeFromJSON(object.ageUpMode)
        : undefined,
      contentDensity: isSet(object.contentDensity)
        ? clientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensityFromJSON(object.contentDensity)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_KidsAppInfo_KidsContentSettings): unknown {
    const obj: any = {};
    if (message.kidsNoSearchMode !== undefined) {
      obj.kidsNoSearchMode = clientInfo_KidsAppInfo_KidsContentSettings_YTKidsNoSearchModeToJSON(
        message.kidsNoSearchMode,
      );
    }
    if (message.ageUpMode !== undefined) {
      obj.ageUpMode = clientInfo_KidsAppInfo_KidsContentSettings_YTKidsAgeUpModeToJSON(message.ageUpMode);
    }
    if (message.contentDensity !== undefined) {
      obj.contentDensity = clientInfo_KidsAppInfo_KidsContentSettings_KidsContentDensityToJSON(message.contentDensity);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsContentSettings>, I>>(
    base?: I,
  ): ClientInfo_KidsAppInfo_KidsContentSettings {
    return ClientInfo_KidsAppInfo_KidsContentSettings.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsContentSettings>, I>>(
    object: I,
  ): ClientInfo_KidsAppInfo_KidsContentSettings {
    const message = createBaseClientInfo_KidsAppInfo_KidsContentSettings();
    message.kidsNoSearchMode = object.kidsNoSearchMode ?? undefined;
    message.ageUpMode = object.ageUpMode ?? undefined;
    message.contentDensity = object.contentDensity ?? undefined;
    return message;
  },
};

function createBaseClientInfo_KidsAppInfo_KidsCategorySettings(): ClientInfo_KidsAppInfo_KidsCategorySettings {
  return { enabledCategories: undefined };
}

export const ClientInfo_KidsAppInfo_KidsCategorySettings: MessageFns<ClientInfo_KidsAppInfo_KidsCategorySettings> = {
  encode(
    message: ClientInfo_KidsAppInfo_KidsCategorySettings,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.enabledCategories !== undefined) {
      writer.uint32(10).string(message.enabledCategories);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_KidsAppInfo_KidsCategorySettings {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_KidsAppInfo_KidsCategorySettings();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.enabledCategories = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_KidsAppInfo_KidsCategorySettings {
    return {
      enabledCategories: isSet(object.enabledCategories) ? globalThis.String(object.enabledCategories) : undefined,
    };
  },

  toJSON(message: ClientInfo_KidsAppInfo_KidsCategorySettings): unknown {
    const obj: any = {};
    if (message.enabledCategories !== undefined) {
      obj.enabledCategories = message.enabledCategories;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsCategorySettings>, I>>(
    base?: I,
  ): ClientInfo_KidsAppInfo_KidsCategorySettings {
    return ClientInfo_KidsAppInfo_KidsCategorySettings.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsCategorySettings>, I>>(
    object: I,
  ): ClientInfo_KidsAppInfo_KidsCategorySettings {
    const message = createBaseClientInfo_KidsAppInfo_KidsCategorySettings();
    message.enabledCategories = object.enabledCategories ?? undefined;
    return message;
  },
};

function createBaseClientInfo_KidsAppInfo_KidsUserEducationSettings(): ClientInfo_KidsAppInfo_KidsUserEducationSettings {
  return {
    hasSeenHomeChipBarUserEducation: undefined,
    hasSeenHomePivotBarUserEducation: undefined,
    hasSeenParentMuirUserEducation: undefined,
  };
}

export const ClientInfo_KidsAppInfo_KidsUserEducationSettings: MessageFns<
  ClientInfo_KidsAppInfo_KidsUserEducationSettings
> = {
  encode(
    message: ClientInfo_KidsAppInfo_KidsUserEducationSettings,
    writer: BinaryWriter = new BinaryWriter(),
  ): BinaryWriter {
    if (message.hasSeenHomeChipBarUserEducation !== undefined) {
      writer.uint32(8).bool(message.hasSeenHomeChipBarUserEducation);
    }
    if (message.hasSeenHomePivotBarUserEducation !== undefined) {
      writer.uint32(16).bool(message.hasSeenHomePivotBarUserEducation);
    }
    if (message.hasSeenParentMuirUserEducation !== undefined) {
      writer.uint32(24).bool(message.hasSeenParentMuirUserEducation);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_KidsAppInfo_KidsUserEducationSettings {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_KidsAppInfo_KidsUserEducationSettings();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.hasSeenHomeChipBarUserEducation = reader.bool();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.hasSeenHomePivotBarUserEducation = reader.bool();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.hasSeenParentMuirUserEducation = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_KidsAppInfo_KidsUserEducationSettings {
    return {
      hasSeenHomeChipBarUserEducation: isSet(object.hasSeenHomeChipBarUserEducation)
        ? globalThis.Boolean(object.hasSeenHomeChipBarUserEducation)
        : undefined,
      hasSeenHomePivotBarUserEducation: isSet(object.hasSeenHomePivotBarUserEducation)
        ? globalThis.Boolean(object.hasSeenHomePivotBarUserEducation)
        : undefined,
      hasSeenParentMuirUserEducation: isSet(object.hasSeenParentMuirUserEducation)
        ? globalThis.Boolean(object.hasSeenParentMuirUserEducation)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_KidsAppInfo_KidsUserEducationSettings): unknown {
    const obj: any = {};
    if (message.hasSeenHomeChipBarUserEducation !== undefined) {
      obj.hasSeenHomeChipBarUserEducation = message.hasSeenHomeChipBarUserEducation;
    }
    if (message.hasSeenHomePivotBarUserEducation !== undefined) {
      obj.hasSeenHomePivotBarUserEducation = message.hasSeenHomePivotBarUserEducation;
    }
    if (message.hasSeenParentMuirUserEducation !== undefined) {
      obj.hasSeenParentMuirUserEducation = message.hasSeenParentMuirUserEducation;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsUserEducationSettings>, I>>(
    base?: I,
  ): ClientInfo_KidsAppInfo_KidsUserEducationSettings {
    return ClientInfo_KidsAppInfo_KidsUserEducationSettings.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_KidsAppInfo_KidsUserEducationSettings>, I>>(
    object: I,
  ): ClientInfo_KidsAppInfo_KidsUserEducationSettings {
    const message = createBaseClientInfo_KidsAppInfo_KidsUserEducationSettings();
    message.hasSeenHomeChipBarUserEducation = object.hasSeenHomeChipBarUserEducation ?? undefined;
    message.hasSeenHomePivotBarUserEducation = object.hasSeenHomePivotBarUserEducation ?? undefined;
    message.hasSeenParentMuirUserEducation = object.hasSeenParentMuirUserEducation ?? undefined;
    return message;
  },
};

function createBaseClientInfo_MusicAppInfo(): ClientInfo_MusicAppInfo {
  return {
    playBackMode: undefined,
    musicLocationMasterSwitch: undefined,
    musicActivityMasterSwitch: undefined,
    offlineMixtapeEnabled: undefined,
    autoOfflineEnabled: undefined,
    iosBackgroundRefreshStatus: undefined,
    smartDownloadsSongLimit: undefined,
    transitionedFromMixtapeToSmartDownloads: undefined,
    pwaInstallabilityStatus: undefined,
    webDisplayMode: undefined,
    musicTier: undefined,
    storeDigitalGoodsApiSupportStatus: undefined,
    smartDownloadsTimeSinceLastOptOutSec: undefined,
  };
}

export const ClientInfo_MusicAppInfo: MessageFns<ClientInfo_MusicAppInfo> = {
  encode(message: ClientInfo_MusicAppInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.playBackMode !== undefined) {
      writer.uint32(8).int32(message.playBackMode);
    }
    if (message.musicLocationMasterSwitch !== undefined) {
      writer.uint32(16).int32(message.musicLocationMasterSwitch);
    }
    if (message.musicActivityMasterSwitch !== undefined) {
      writer.uint32(24).int32(message.musicActivityMasterSwitch);
    }
    if (message.offlineMixtapeEnabled !== undefined) {
      writer.uint32(32).bool(message.offlineMixtapeEnabled);
    }
    if (message.autoOfflineEnabled !== undefined) {
      writer.uint32(40).bool(message.autoOfflineEnabled);
    }
    if (message.iosBackgroundRefreshStatus !== undefined) {
      writer.uint32(48).int32(message.iosBackgroundRefreshStatus);
    }
    if (message.smartDownloadsSongLimit !== undefined) {
      writer.uint32(56).int32(message.smartDownloadsSongLimit);
    }
    if (message.transitionedFromMixtapeToSmartDownloads !== undefined) {
      writer.uint32(64).bool(message.transitionedFromMixtapeToSmartDownloads);
    }
    if (message.pwaInstallabilityStatus !== undefined) {
      writer.uint32(72).int32(message.pwaInstallabilityStatus);
    }
    if (message.webDisplayMode !== undefined) {
      writer.uint32(80).int32(message.webDisplayMode);
    }
    if (message.musicTier !== undefined) {
      writer.uint32(88).int32(message.musicTier);
    }
    if (message.storeDigitalGoodsApiSupportStatus !== undefined) {
      writer.uint32(96).int32(message.storeDigitalGoodsApiSupportStatus);
    }
    if (message.smartDownloadsTimeSinceLastOptOutSec !== undefined) {
      writer.uint32(104).int64(message.smartDownloadsTimeSinceLastOptOutSec);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_MusicAppInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_MusicAppInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.playBackMode = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.musicLocationMasterSwitch = reader.int32() as any;
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.musicActivityMasterSwitch = reader.int32() as any;
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.offlineMixtapeEnabled = reader.bool();
          continue;
        case 5:
          if (tag !== 40) {
            break;
          }

          message.autoOfflineEnabled = reader.bool();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.iosBackgroundRefreshStatus = reader.int32() as any;
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.smartDownloadsSongLimit = reader.int32();
          continue;
        case 8:
          if (tag !== 64) {
            break;
          }

          message.transitionedFromMixtapeToSmartDownloads = reader.bool();
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.pwaInstallabilityStatus = reader.int32() as any;
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }

          message.webDisplayMode = reader.int32() as any;
          continue;
        case 11:
          if (tag !== 88) {
            break;
          }

          message.musicTier = reader.int32() as any;
          continue;
        case 12:
          if (tag !== 96) {
            break;
          }

          message.storeDigitalGoodsApiSupportStatus = reader.int32() as any;
          continue;
        case 13:
          if (tag !== 104) {
            break;
          }

          message.smartDownloadsTimeSinceLastOptOutSec = longToNumber(reader.int64());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_MusicAppInfo {
    return {
      playBackMode: isSet(object.playBackMode)
        ? clientInfo_MusicAppInfo_MusicPlayBackModeFromJSON(object.playBackMode)
        : undefined,
      musicLocationMasterSwitch: isSet(object.musicLocationMasterSwitch)
        ? clientInfo_MusicAppInfo_MusicLocationMasterSwitchFromJSON(object.musicLocationMasterSwitch)
        : undefined,
      musicActivityMasterSwitch: isSet(object.musicActivityMasterSwitch)
        ? clientInfo_MusicAppInfo_MusicActivityMasterSwitchFromJSON(object.musicActivityMasterSwitch)
        : undefined,
      offlineMixtapeEnabled: isSet(object.offlineMixtapeEnabled)
        ? globalThis.Boolean(object.offlineMixtapeEnabled)
        : undefined,
      autoOfflineEnabled: isSet(object.autoOfflineEnabled) ? globalThis.Boolean(object.autoOfflineEnabled) : undefined,
      iosBackgroundRefreshStatus: isSet(object.iosBackgroundRefreshStatus)
        ? clientInfo_MusicAppInfo_IosBackgroundRefreshStatusFromJSON(object.iosBackgroundRefreshStatus)
        : undefined,
      smartDownloadsSongLimit: isSet(object.smartDownloadsSongLimit)
        ? globalThis.Number(object.smartDownloadsSongLimit)
        : undefined,
      transitionedFromMixtapeToSmartDownloads: isSet(object.transitionedFromMixtapeToSmartDownloads)
        ? globalThis.Boolean(object.transitionedFromMixtapeToSmartDownloads)
        : undefined,
      pwaInstallabilityStatus: isSet(object.pwaInstallabilityStatus)
        ? clientInfo_MusicAppInfo_PwaInstallabilityStatusFromJSON(object.pwaInstallabilityStatus)
        : undefined,
      webDisplayMode: isSet(object.webDisplayMode)
        ? clientInfo_MusicAppInfo_WebDisplayModeFromJSON(object.webDisplayMode)
        : undefined,
      musicTier: isSet(object.musicTier) ? clientInfo_MusicAppInfo_MusicTierFromJSON(object.musicTier) : undefined,
      storeDigitalGoodsApiSupportStatus: isSet(object.storeDigitalGoodsApiSupportStatus)
        ? clientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatusFromJSON(object.storeDigitalGoodsApiSupportStatus)
        : undefined,
      smartDownloadsTimeSinceLastOptOutSec: isSet(object.smartDownloadsTimeSinceLastOptOutSec)
        ? globalThis.Number(object.smartDownloadsTimeSinceLastOptOutSec)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_MusicAppInfo): unknown {
    const obj: any = {};
    if (message.playBackMode !== undefined) {
      obj.playBackMode = clientInfo_MusicAppInfo_MusicPlayBackModeToJSON(message.playBackMode);
    }
    if (message.musicLocationMasterSwitch !== undefined) {
      obj.musicLocationMasterSwitch = clientInfo_MusicAppInfo_MusicLocationMasterSwitchToJSON(
        message.musicLocationMasterSwitch,
      );
    }
    if (message.musicActivityMasterSwitch !== undefined) {
      obj.musicActivityMasterSwitch = clientInfo_MusicAppInfo_MusicActivityMasterSwitchToJSON(
        message.musicActivityMasterSwitch,
      );
    }
    if (message.offlineMixtapeEnabled !== undefined) {
      obj.offlineMixtapeEnabled = message.offlineMixtapeEnabled;
    }
    if (message.autoOfflineEnabled !== undefined) {
      obj.autoOfflineEnabled = message.autoOfflineEnabled;
    }
    if (message.iosBackgroundRefreshStatus !== undefined) {
      obj.iosBackgroundRefreshStatus = clientInfo_MusicAppInfo_IosBackgroundRefreshStatusToJSON(
        message.iosBackgroundRefreshStatus,
      );
    }
    if (message.smartDownloadsSongLimit !== undefined) {
      obj.smartDownloadsSongLimit = Math.round(message.smartDownloadsSongLimit);
    }
    if (message.transitionedFromMixtapeToSmartDownloads !== undefined) {
      obj.transitionedFromMixtapeToSmartDownloads = message.transitionedFromMixtapeToSmartDownloads;
    }
    if (message.pwaInstallabilityStatus !== undefined) {
      obj.pwaInstallabilityStatus = clientInfo_MusicAppInfo_PwaInstallabilityStatusToJSON(
        message.pwaInstallabilityStatus,
      );
    }
    if (message.webDisplayMode !== undefined) {
      obj.webDisplayMode = clientInfo_MusicAppInfo_WebDisplayModeToJSON(message.webDisplayMode);
    }
    if (message.musicTier !== undefined) {
      obj.musicTier = clientInfo_MusicAppInfo_MusicTierToJSON(message.musicTier);
    }
    if (message.storeDigitalGoodsApiSupportStatus !== undefined) {
      obj.storeDigitalGoodsApiSupportStatus = clientInfo_MusicAppInfo_StoreDigitalGoodsApiSupportStatusToJSON(
        message.storeDigitalGoodsApiSupportStatus,
      );
    }
    if (message.smartDownloadsTimeSinceLastOptOutSec !== undefined) {
      obj.smartDownloadsTimeSinceLastOptOutSec = Math.round(message.smartDownloadsTimeSinceLastOptOutSec);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_MusicAppInfo>, I>>(base?: I): ClientInfo_MusicAppInfo {
    return ClientInfo_MusicAppInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_MusicAppInfo>, I>>(object: I): ClientInfo_MusicAppInfo {
    const message = createBaseClientInfo_MusicAppInfo();
    message.playBackMode = object.playBackMode ?? undefined;
    message.musicLocationMasterSwitch = object.musicLocationMasterSwitch ?? undefined;
    message.musicActivityMasterSwitch = object.musicActivityMasterSwitch ?? undefined;
    message.offlineMixtapeEnabled = object.offlineMixtapeEnabled ?? undefined;
    message.autoOfflineEnabled = object.autoOfflineEnabled ?? undefined;
    message.iosBackgroundRefreshStatus = object.iosBackgroundRefreshStatus ?? undefined;
    message.smartDownloadsSongLimit = object.smartDownloadsSongLimit ?? undefined;
    message.transitionedFromMixtapeToSmartDownloads = object.transitionedFromMixtapeToSmartDownloads ?? undefined;
    message.pwaInstallabilityStatus = object.pwaInstallabilityStatus ?? undefined;
    message.webDisplayMode = object.webDisplayMode ?? undefined;
    message.musicTier = object.musicTier ?? undefined;
    message.storeDigitalGoodsApiSupportStatus = object.storeDigitalGoodsApiSupportStatus ?? undefined;
    message.smartDownloadsTimeSinceLastOptOutSec = object.smartDownloadsTimeSinceLastOptOutSec ?? undefined;
    return message;
  },
};

function createBaseClientInfo_TvAppInfo(): ClientInfo_TvAppInfo {
  return {
    mdxImpactedSessionsServerEvents: undefined,
    enablePrivacyFilter: undefined,
    zylonLeftNav: undefined,
    certificationScope: undefined,
    livingRoomPoTokenId: undefined,
    jsEngineString: undefined,
    voiceCapability: undefined,
    systemIntegrator: undefined,
    androidBuildFingerprint: undefined,
    cobaltAppVersion: undefined,
    cobaltStarboardVersion: undefined,
    useStartPlaybackPreviewCommand: undefined,
    shouldShowPersistentSigninOnHome: undefined,
    androidPlayServicesVersion: undefined,
  };
}

export const ClientInfo_TvAppInfo: MessageFns<ClientInfo_TvAppInfo> = {
  encode(message: ClientInfo_TvAppInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.mdxImpactedSessionsServerEvents !== undefined) {
      writer.uint32(26).string(message.mdxImpactedSessionsServerEvents);
    }
    if (message.enablePrivacyFilter !== undefined) {
      writer.uint32(48).bool(message.enablePrivacyFilter);
    }
    if (message.zylonLeftNav !== undefined) {
      writer.uint32(56).bool(message.zylonLeftNav);
    }
    if (message.certificationScope !== undefined) {
      writer.uint32(74).string(message.certificationScope);
    }
    if (message.livingRoomPoTokenId !== undefined) {
      writer.uint32(82).string(message.livingRoomPoTokenId);
    }
    if (message.jsEngineString !== undefined) {
      writer.uint32(98).string(message.jsEngineString);
    }
    if (message.voiceCapability !== undefined) {
      ClientInfo_TvAppInfo_VoiceCapability.encode(message.voiceCapability, writer.uint32(106).fork()).join();
    }
    if (message.systemIntegrator !== undefined) {
      writer.uint32(114).string(message.systemIntegrator);
    }
    if (message.androidBuildFingerprint !== undefined) {
      writer.uint32(146).string(message.androidBuildFingerprint);
    }
    if (message.cobaltAppVersion !== undefined) {
      writer.uint32(154).string(message.cobaltAppVersion);
    }
    if (message.cobaltStarboardVersion !== undefined) {
      writer.uint32(162).string(message.cobaltStarboardVersion);
    }
    if (message.useStartPlaybackPreviewCommand !== undefined) {
      writer.uint32(176).bool(message.useStartPlaybackPreviewCommand);
    }
    if (message.shouldShowPersistentSigninOnHome !== undefined) {
      writer.uint32(184).bool(message.shouldShowPersistentSigninOnHome);
    }
    if (message.androidPlayServicesVersion !== undefined) {
      writer.uint32(194).string(message.androidPlayServicesVersion);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_TvAppInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_TvAppInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          if (tag !== 26) {
            break;
          }

          message.mdxImpactedSessionsServerEvents = reader.string();
          continue;
        case 6:
          if (tag !== 48) {
            break;
          }

          message.enablePrivacyFilter = reader.bool();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.zylonLeftNav = reader.bool();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.certificationScope = reader.string();
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.livingRoomPoTokenId = reader.string();
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.jsEngineString = reader.string();
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.voiceCapability = ClientInfo_TvAppInfo_VoiceCapability.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.systemIntegrator = reader.string();
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.androidBuildFingerprint = reader.string();
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.cobaltAppVersion = reader.string();
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.cobaltStarboardVersion = reader.string();
          continue;
        case 22:
          if (tag !== 176) {
            break;
          }

          message.useStartPlaybackPreviewCommand = reader.bool();
          continue;
        case 23:
          if (tag !== 184) {
            break;
          }

          message.shouldShowPersistentSigninOnHome = reader.bool();
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.androidPlayServicesVersion = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_TvAppInfo {
    return {
      mdxImpactedSessionsServerEvents: isSet(object.mdxImpactedSessionsServerEvents)
        ? globalThis.String(object.mdxImpactedSessionsServerEvents)
        : undefined,
      enablePrivacyFilter: isSet(object.enablePrivacyFilter)
        ? globalThis.Boolean(object.enablePrivacyFilter)
        : undefined,
      zylonLeftNav: isSet(object.zylonLeftNav) ? globalThis.Boolean(object.zylonLeftNav) : undefined,
      certificationScope: isSet(object.certificationScope) ? globalThis.String(object.certificationScope) : undefined,
      livingRoomPoTokenId: isSet(object.livingRoomPoTokenId)
        ? globalThis.String(object.livingRoomPoTokenId)
        : undefined,
      jsEngineString: isSet(object.jsEngineString) ? globalThis.String(object.jsEngineString) : undefined,
      voiceCapability: isSet(object.voiceCapability)
        ? ClientInfo_TvAppInfo_VoiceCapability.fromJSON(object.voiceCapability)
        : undefined,
      systemIntegrator: isSet(object.systemIntegrator) ? globalThis.String(object.systemIntegrator) : undefined,
      androidBuildFingerprint: isSet(object.androidBuildFingerprint)
        ? globalThis.String(object.androidBuildFingerprint)
        : undefined,
      cobaltAppVersion: isSet(object.cobaltAppVersion) ? globalThis.String(object.cobaltAppVersion) : undefined,
      cobaltStarboardVersion: isSet(object.cobaltStarboardVersion)
        ? globalThis.String(object.cobaltStarboardVersion)
        : undefined,
      useStartPlaybackPreviewCommand: isSet(object.useStartPlaybackPreviewCommand)
        ? globalThis.Boolean(object.useStartPlaybackPreviewCommand)
        : undefined,
      shouldShowPersistentSigninOnHome: isSet(object.shouldShowPersistentSigninOnHome)
        ? globalThis.Boolean(object.shouldShowPersistentSigninOnHome)
        : undefined,
      androidPlayServicesVersion: isSet(object.androidPlayServicesVersion)
        ? globalThis.String(object.androidPlayServicesVersion)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_TvAppInfo): unknown {
    const obj: any = {};
    if (message.mdxImpactedSessionsServerEvents !== undefined) {
      obj.mdxImpactedSessionsServerEvents = message.mdxImpactedSessionsServerEvents;
    }
    if (message.enablePrivacyFilter !== undefined) {
      obj.enablePrivacyFilter = message.enablePrivacyFilter;
    }
    if (message.zylonLeftNav !== undefined) {
      obj.zylonLeftNav = message.zylonLeftNav;
    }
    if (message.certificationScope !== undefined) {
      obj.certificationScope = message.certificationScope;
    }
    if (message.livingRoomPoTokenId !== undefined) {
      obj.livingRoomPoTokenId = message.livingRoomPoTokenId;
    }
    if (message.jsEngineString !== undefined) {
      obj.jsEngineString = message.jsEngineString;
    }
    if (message.voiceCapability !== undefined) {
      obj.voiceCapability = ClientInfo_TvAppInfo_VoiceCapability.toJSON(message.voiceCapability);
    }
    if (message.systemIntegrator !== undefined) {
      obj.systemIntegrator = message.systemIntegrator;
    }
    if (message.androidBuildFingerprint !== undefined) {
      obj.androidBuildFingerprint = message.androidBuildFingerprint;
    }
    if (message.cobaltAppVersion !== undefined) {
      obj.cobaltAppVersion = message.cobaltAppVersion;
    }
    if (message.cobaltStarboardVersion !== undefined) {
      obj.cobaltStarboardVersion = message.cobaltStarboardVersion;
    }
    if (message.useStartPlaybackPreviewCommand !== undefined) {
      obj.useStartPlaybackPreviewCommand = message.useStartPlaybackPreviewCommand;
    }
    if (message.shouldShowPersistentSigninOnHome !== undefined) {
      obj.shouldShowPersistentSigninOnHome = message.shouldShowPersistentSigninOnHome;
    }
    if (message.androidPlayServicesVersion !== undefined) {
      obj.androidPlayServicesVersion = message.androidPlayServicesVersion;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_TvAppInfo>, I>>(base?: I): ClientInfo_TvAppInfo {
    return ClientInfo_TvAppInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_TvAppInfo>, I>>(object: I): ClientInfo_TvAppInfo {
    const message = createBaseClientInfo_TvAppInfo();
    message.mdxImpactedSessionsServerEvents = object.mdxImpactedSessionsServerEvents ?? undefined;
    message.enablePrivacyFilter = object.enablePrivacyFilter ?? undefined;
    message.zylonLeftNav = object.zylonLeftNav ?? undefined;
    message.certificationScope = object.certificationScope ?? undefined;
    message.livingRoomPoTokenId = object.livingRoomPoTokenId ?? undefined;
    message.jsEngineString = object.jsEngineString ?? undefined;
    message.voiceCapability = (object.voiceCapability !== undefined && object.voiceCapability !== null)
      ? ClientInfo_TvAppInfo_VoiceCapability.fromPartial(object.voiceCapability)
      : undefined;
    message.systemIntegrator = object.systemIntegrator ?? undefined;
    message.androidBuildFingerprint = object.androidBuildFingerprint ?? undefined;
    message.cobaltAppVersion = object.cobaltAppVersion ?? undefined;
    message.cobaltStarboardVersion = object.cobaltStarboardVersion ?? undefined;
    message.useStartPlaybackPreviewCommand = object.useStartPlaybackPreviewCommand ?? undefined;
    message.shouldShowPersistentSigninOnHome = object.shouldShowPersistentSigninOnHome ?? undefined;
    message.androidPlayServicesVersion = object.androidPlayServicesVersion ?? undefined;
    return message;
  },
};

function createBaseClientInfo_TvAppInfo_VoiceCapability(): ClientInfo_TvAppInfo_VoiceCapability {
  return { hasSoftMicSupport: undefined, hasHardMicSupport: undefined };
}

export const ClientInfo_TvAppInfo_VoiceCapability: MessageFns<ClientInfo_TvAppInfo_VoiceCapability> = {
  encode(message: ClientInfo_TvAppInfo_VoiceCapability, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.hasSoftMicSupport !== undefined) {
      writer.uint32(8).bool(message.hasSoftMicSupport);
    }
    if (message.hasHardMicSupport !== undefined) {
      writer.uint32(16).bool(message.hasHardMicSupport);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_TvAppInfo_VoiceCapability {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_TvAppInfo_VoiceCapability();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.hasSoftMicSupport = reader.bool();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.hasHardMicSupport = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_TvAppInfo_VoiceCapability {
    return {
      hasSoftMicSupport: isSet(object.hasSoftMicSupport) ? globalThis.Boolean(object.hasSoftMicSupport) : undefined,
      hasHardMicSupport: isSet(object.hasHardMicSupport) ? globalThis.Boolean(object.hasHardMicSupport) : undefined,
    };
  },

  toJSON(message: ClientInfo_TvAppInfo_VoiceCapability): unknown {
    const obj: any = {};
    if (message.hasSoftMicSupport !== undefined) {
      obj.hasSoftMicSupport = message.hasSoftMicSupport;
    }
    if (message.hasHardMicSupport !== undefined) {
      obj.hasHardMicSupport = message.hasHardMicSupport;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_TvAppInfo_VoiceCapability>, I>>(
    base?: I,
  ): ClientInfo_TvAppInfo_VoiceCapability {
    return ClientInfo_TvAppInfo_VoiceCapability.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_TvAppInfo_VoiceCapability>, I>>(
    object: I,
  ): ClientInfo_TvAppInfo_VoiceCapability {
    const message = createBaseClientInfo_TvAppInfo_VoiceCapability();
    message.hasSoftMicSupport = object.hasSoftMicSupport ?? undefined;
    message.hasHardMicSupport = object.hasHardMicSupport ?? undefined;
    return message;
  },
};

function createBaseClientInfo_UnpluggedAppInfo(): ClientInfo_UnpluggedAppInfo {
  return { enableFilterMode: undefined, iosNotificationPermission: undefined, forceEnableEpg3: undefined };
}

export const ClientInfo_UnpluggedAppInfo: MessageFns<ClientInfo_UnpluggedAppInfo> = {
  encode(message: ClientInfo_UnpluggedAppInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.enableFilterMode !== undefined) {
      writer.uint32(16).bool(message.enableFilterMode);
    }
    if (message.iosNotificationPermission !== undefined) {
      writer.uint32(24).bool(message.iosNotificationPermission);
    }
    if (message.forceEnableEpg3 !== undefined) {
      writer.uint32(56).bool(message.forceEnableEpg3);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_UnpluggedAppInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_UnpluggedAppInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 2:
          if (tag !== 16) {
            break;
          }

          message.enableFilterMode = reader.bool();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.iosNotificationPermission = reader.bool();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.forceEnableEpg3 = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_UnpluggedAppInfo {
    return {
      enableFilterMode: isSet(object.enableFilterMode) ? globalThis.Boolean(object.enableFilterMode) : undefined,
      iosNotificationPermission: isSet(object.iosNotificationPermission)
        ? globalThis.Boolean(object.iosNotificationPermission)
        : undefined,
      forceEnableEpg3: isSet(object.forceEnableEpg3) ? globalThis.Boolean(object.forceEnableEpg3) : undefined,
    };
  },

  toJSON(message: ClientInfo_UnpluggedAppInfo): unknown {
    const obj: any = {};
    if (message.enableFilterMode !== undefined) {
      obj.enableFilterMode = message.enableFilterMode;
    }
    if (message.iosNotificationPermission !== undefined) {
      obj.iosNotificationPermission = message.iosNotificationPermission;
    }
    if (message.forceEnableEpg3 !== undefined) {
      obj.forceEnableEpg3 = message.forceEnableEpg3;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_UnpluggedAppInfo>, I>>(base?: I): ClientInfo_UnpluggedAppInfo {
    return ClientInfo_UnpluggedAppInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_UnpluggedAppInfo>, I>>(object: I): ClientInfo_UnpluggedAppInfo {
    const message = createBaseClientInfo_UnpluggedAppInfo();
    message.enableFilterMode = object.enableFilterMode ?? undefined;
    message.iosNotificationPermission = object.iosNotificationPermission ?? undefined;
    message.forceEnableEpg3 = object.forceEnableEpg3 ?? undefined;
    return message;
  },
};

function createBaseClientInfo_LocationInfo(): ClientInfo_LocationInfo {
  return {
    locationInfoStatus: undefined,
    ulrStatus: undefined,
    latitudeE7: undefined,
    longitudeE7: undefined,
    horizontalAccuracyMeters: undefined,
    locationFreshnessMs: undefined,
    locationPermissionAuthorizationStatus: undefined,
    locationOverrideToken: undefined,
    forceLocationPlayabilityTokenRefresh: undefined,
  };
}

export const ClientInfo_LocationInfo: MessageFns<ClientInfo_LocationInfo> = {
  encode(message: ClientInfo_LocationInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.locationInfoStatus !== undefined) {
      writer.uint32(8).int32(message.locationInfoStatus);
    }
    if (message.ulrStatus !== undefined) {
      ClientInfo_LocationInfo_UrlStatus.encode(message.ulrStatus, writer.uint32(18).fork()).join();
    }
    if (message.latitudeE7 !== undefined) {
      writer.uint32(26).string(message.latitudeE7);
    }
    if (message.longitudeE7 !== undefined) {
      writer.uint32(34).string(message.longitudeE7);
    }
    if (message.horizontalAccuracyMeters !== undefined) {
      writer.uint32(42).string(message.horizontalAccuracyMeters);
    }
    if (message.locationFreshnessMs !== undefined) {
      writer.uint32(50).string(message.locationFreshnessMs);
    }
    if (message.locationPermissionAuthorizationStatus !== undefined) {
      writer.uint32(56).int32(message.locationPermissionAuthorizationStatus);
    }
    if (message.locationOverrideToken !== undefined) {
      writer.uint32(66).string(message.locationOverrideToken);
    }
    if (message.forceLocationPlayabilityTokenRefresh !== undefined) {
      writer.uint32(72).bool(message.forceLocationPlayabilityTokenRefresh);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_LocationInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_LocationInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.locationInfoStatus = reader.int32();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.ulrStatus = ClientInfo_LocationInfo_UrlStatus.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.latitudeE7 = reader.string();
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.longitudeE7 = reader.string();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.horizontalAccuracyMeters = reader.string();
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.locationFreshnessMs = reader.string();
          continue;
        case 7:
          if (tag !== 56) {
            break;
          }

          message.locationPermissionAuthorizationStatus = reader.int32();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.locationOverrideToken = reader.string();
          continue;
        case 9:
          if (tag !== 72) {
            break;
          }

          message.forceLocationPlayabilityTokenRefresh = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_LocationInfo {
    return {
      locationInfoStatus: isSet(object.locationInfoStatus) ? globalThis.Number(object.locationInfoStatus) : undefined,
      ulrStatus: isSet(object.ulrStatus) ? ClientInfo_LocationInfo_UrlStatus.fromJSON(object.ulrStatus) : undefined,
      latitudeE7: isSet(object.latitudeE7) ? globalThis.String(object.latitudeE7) : undefined,
      longitudeE7: isSet(object.longitudeE7) ? globalThis.String(object.longitudeE7) : undefined,
      horizontalAccuracyMeters: isSet(object.horizontalAccuracyMeters)
        ? globalThis.String(object.horizontalAccuracyMeters)
        : undefined,
      locationFreshnessMs: isSet(object.locationFreshnessMs)
        ? globalThis.String(object.locationFreshnessMs)
        : undefined,
      locationPermissionAuthorizationStatus: isSet(object.locationPermissionAuthorizationStatus)
        ? globalThis.Number(object.locationPermissionAuthorizationStatus)
        : undefined,
      locationOverrideToken: isSet(object.locationOverrideToken)
        ? globalThis.String(object.locationOverrideToken)
        : undefined,
      forceLocationPlayabilityTokenRefresh: isSet(object.forceLocationPlayabilityTokenRefresh)
        ? globalThis.Boolean(object.forceLocationPlayabilityTokenRefresh)
        : undefined,
    };
  },

  toJSON(message: ClientInfo_LocationInfo): unknown {
    const obj: any = {};
    if (message.locationInfoStatus !== undefined) {
      obj.locationInfoStatus = Math.round(message.locationInfoStatus);
    }
    if (message.ulrStatus !== undefined) {
      obj.ulrStatus = ClientInfo_LocationInfo_UrlStatus.toJSON(message.ulrStatus);
    }
    if (message.latitudeE7 !== undefined) {
      obj.latitudeE7 = message.latitudeE7;
    }
    if (message.longitudeE7 !== undefined) {
      obj.longitudeE7 = message.longitudeE7;
    }
    if (message.horizontalAccuracyMeters !== undefined) {
      obj.horizontalAccuracyMeters = message.horizontalAccuracyMeters;
    }
    if (message.locationFreshnessMs !== undefined) {
      obj.locationFreshnessMs = message.locationFreshnessMs;
    }
    if (message.locationPermissionAuthorizationStatus !== undefined) {
      obj.locationPermissionAuthorizationStatus = Math.round(message.locationPermissionAuthorizationStatus);
    }
    if (message.locationOverrideToken !== undefined) {
      obj.locationOverrideToken = message.locationOverrideToken;
    }
    if (message.forceLocationPlayabilityTokenRefresh !== undefined) {
      obj.forceLocationPlayabilityTokenRefresh = message.forceLocationPlayabilityTokenRefresh;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_LocationInfo>, I>>(base?: I): ClientInfo_LocationInfo {
    return ClientInfo_LocationInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_LocationInfo>, I>>(object: I): ClientInfo_LocationInfo {
    const message = createBaseClientInfo_LocationInfo();
    message.locationInfoStatus = object.locationInfoStatus ?? undefined;
    message.ulrStatus = (object.ulrStatus !== undefined && object.ulrStatus !== null)
      ? ClientInfo_LocationInfo_UrlStatus.fromPartial(object.ulrStatus)
      : undefined;
    message.latitudeE7 = object.latitudeE7 ?? undefined;
    message.longitudeE7 = object.longitudeE7 ?? undefined;
    message.horizontalAccuracyMeters = object.horizontalAccuracyMeters ?? undefined;
    message.locationFreshnessMs = object.locationFreshnessMs ?? undefined;
    message.locationPermissionAuthorizationStatus = object.locationPermissionAuthorizationStatus ?? undefined;
    message.locationOverrideToken = object.locationOverrideToken ?? undefined;
    message.forceLocationPlayabilityTokenRefresh = object.forceLocationPlayabilityTokenRefresh ?? undefined;
    return message;
  },
};

function createBaseClientInfo_LocationInfo_UrlStatus(): ClientInfo_LocationInfo_UrlStatus {
  return {
    reportingEnabledSetting: undefined,
    historyEnabledSetting: undefined,
    isAllowed: undefined,
    isActive: undefined,
  };
}

export const ClientInfo_LocationInfo_UrlStatus: MessageFns<ClientInfo_LocationInfo_UrlStatus> = {
  encode(message: ClientInfo_LocationInfo_UrlStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.reportingEnabledSetting !== undefined) {
      writer.uint32(8).int32(message.reportingEnabledSetting);
    }
    if (message.historyEnabledSetting !== undefined) {
      writer.uint32(16).int32(message.historyEnabledSetting);
    }
    if (message.isAllowed !== undefined) {
      writer.uint32(24).bool(message.isAllowed);
    }
    if (message.isActive !== undefined) {
      writer.uint32(32).bool(message.isActive);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_LocationInfo_UrlStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_LocationInfo_UrlStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.reportingEnabledSetting = reader.int32();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.historyEnabledSetting = reader.int32();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.isAllowed = reader.bool();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }

          message.isActive = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_LocationInfo_UrlStatus {
    return {
      reportingEnabledSetting: isSet(object.reportingEnabledSetting)
        ? globalThis.Number(object.reportingEnabledSetting)
        : undefined,
      historyEnabledSetting: isSet(object.historyEnabledSetting)
        ? globalThis.Number(object.historyEnabledSetting)
        : undefined,
      isAllowed: isSet(object.isAllowed) ? globalThis.Boolean(object.isAllowed) : undefined,
      isActive: isSet(object.isActive) ? globalThis.Boolean(object.isActive) : undefined,
    };
  },

  toJSON(message: ClientInfo_LocationInfo_UrlStatus): unknown {
    const obj: any = {};
    if (message.reportingEnabledSetting !== undefined) {
      obj.reportingEnabledSetting = Math.round(message.reportingEnabledSetting);
    }
    if (message.historyEnabledSetting !== undefined) {
      obj.historyEnabledSetting = Math.round(message.historyEnabledSetting);
    }
    if (message.isAllowed !== undefined) {
      obj.isAllowed = message.isAllowed;
    }
    if (message.isActive !== undefined) {
      obj.isActive = message.isActive;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_LocationInfo_UrlStatus>, I>>(
    base?: I,
  ): ClientInfo_LocationInfo_UrlStatus {
    return ClientInfo_LocationInfo_UrlStatus.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_LocationInfo_UrlStatus>, I>>(
    object: I,
  ): ClientInfo_LocationInfo_UrlStatus {
    const message = createBaseClientInfo_LocationInfo_UrlStatus();
    message.reportingEnabledSetting = object.reportingEnabledSetting ?? undefined;
    message.historyEnabledSetting = object.historyEnabledSetting ?? undefined;
    message.isAllowed = object.isAllowed ?? undefined;
    message.isActive = object.isActive ?? undefined;
    return message;
  },
};

function createBaseClientInfo_HomeGroupInfo(): ClientInfo_HomeGroupInfo {
  return { isPartOfGroup: undefined, isGroup: undefined };
}

export const ClientInfo_HomeGroupInfo: MessageFns<ClientInfo_HomeGroupInfo> = {
  encode(message: ClientInfo_HomeGroupInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.isPartOfGroup !== undefined) {
      writer.uint32(8).bool(message.isPartOfGroup);
    }
    if (message.isGroup !== undefined) {
      writer.uint32(24).bool(message.isGroup);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ClientInfo_HomeGroupInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseClientInfo_HomeGroupInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.isPartOfGroup = reader.bool();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.isGroup = reader.bool();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ClientInfo_HomeGroupInfo {
    return {
      isPartOfGroup: isSet(object.isPartOfGroup) ? globalThis.Boolean(object.isPartOfGroup) : undefined,
      isGroup: isSet(object.isGroup) ? globalThis.Boolean(object.isGroup) : undefined,
    };
  },

  toJSON(message: ClientInfo_HomeGroupInfo): unknown {
    const obj: any = {};
    if (message.isPartOfGroup !== undefined) {
      obj.isPartOfGroup = message.isPartOfGroup;
    }
    if (message.isGroup !== undefined) {
      obj.isGroup = message.isGroup;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<ClientInfo_HomeGroupInfo>, I>>(base?: I): ClientInfo_HomeGroupInfo {
    return ClientInfo_HomeGroupInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<ClientInfo_HomeGroupInfo>, I>>(object: I): ClientInfo_HomeGroupInfo {
    const message = createBaseClientInfo_HomeGroupInfo();
    message.isPartOfGroup = object.isPartOfGroup ?? undefined;
    message.isGroup = object.isGroup ?? undefined;
    return message;
  },
};

function bytesFromBase64(b64: string): Uint8Array {
  const bin = globalThis.atob(b64);
  const arr = new Uint8Array(bin.length);
  for (let i = 0; i < bin.length; ++i) {
    arr[i] = bin.charCodeAt(i);
  }
  return arr;
}

function base64FromBytes(arr: Uint8Array): string {
  const bin: string[] = [];
  arr.forEach((byte) => {
    bin.push(globalThis.String.fromCharCode(byte));
  });
  return globalThis.btoa(bin.join(""));
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function longToNumber(int64: { toString(): string }): number {
  const num = globalThis.Number(int64.toString());
  if (num > globalThis.Number.MAX_SAFE_INTEGER) {
    throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
  }
  if (num < globalThis.Number.MIN_SAFE_INTEGER) {
    throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");
  }
  return num;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
